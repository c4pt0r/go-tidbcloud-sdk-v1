// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpenapiListPrivateLinkEndpointsResp ListPrivateLinkEndpointsResp
//
// ListPrivateLinkEndpointsResp is the response for listing private link endpoints for an accesspoint.
//
// swagger:model openapiListPrivateLinkEndpointsResp
type OpenapiListPrivateLinkEndpointsResp struct {

	// The private link endpoints for an accesspoint.
	// Required: true
	Items []*OpenapiListPrivateLinkEndpointsRespItemsItems0 `json:"items"`

	// The total number of private link endpoints.
	// Example: 1
	// Required: true
	Total *int64 `json:"total"`
}

// Validate validates this openapi list private link endpoints resp
func (m *OpenapiListPrivateLinkEndpointsResp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenapiListPrivateLinkEndpointsResp) validateItems(formats strfmt.Registry) error {

	if err := validate.Required("items", "body", m.Items); err != nil {
		return err
	}

	for i := 0; i < len(m.Items); i++ {
		if swag.IsZero(m.Items[i]) { // not required
			continue
		}

		if m.Items[i] != nil {
			if err := m.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OpenapiListPrivateLinkEndpointsResp) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("total", "body", m.Total); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this openapi list private link endpoints resp based on the context it is used
func (m *OpenapiListPrivateLinkEndpointsResp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenapiListPrivateLinkEndpointsResp) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Items); i++ {

		if m.Items[i] != nil {

			if swag.IsZero(m.Items[i]) { // not required
				return nil
			}

			if err := m.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OpenapiListPrivateLinkEndpointsResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenapiListPrivateLinkEndpointsResp) UnmarshalBinary(b []byte) error {
	var res OpenapiListPrivateLinkEndpointsResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OpenapiListPrivateLinkEndpointsRespItemsItems0 PrivateLinkEndpoint
//
// # PrivateLinkEndpoint
//
// swagger:model OpenapiListPrivateLinkEndpointsRespItemsItems0
type OpenapiListPrivateLinkEndpointsRespItemsItems0 struct {

	// The format of the private endpoint name varies by cloud provider: `"vpce-xxxx"` for AWS and `"projects/xxx/regions/xxx/forwardingRules/xxx"` for Google Cloud.
	// Example: vpce-01234567890123456
	// Required: true
	EndpointName *string `json:"endpoint_name"`

	// The ID of the private link endpoint.
	// Example: 1
	// Required: true
	ID *string `json:"id"`

	// [Output Only] The detailed message when the `status` is "FAILED".
	// Example: The endpoint does not exist.
	Message string `json:"message,omitempty"`

	// [Output Only] The status of the private endpoint.
	// Example: ACTIVE
	// Required: true
	// Enum: ["PENDING","ACTIVE","DELETING","FAILED"]
	Status *string `json:"status"`
}

// Validate validates this openapi list private link endpoints resp items items0
func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndpointName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) validateEndpointName(formats strfmt.Registry) error {

	if err := validate.Required("endpoint_name", "body", m.EndpointName); err != nil {
		return err
	}

	return nil
}

func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var openapiListPrivateLinkEndpointsRespItemsItems0TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PENDING","ACTIVE","DELETING","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openapiListPrivateLinkEndpointsRespItemsItems0TypeStatusPropEnum = append(openapiListPrivateLinkEndpointsRespItemsItems0TypeStatusPropEnum, v)
	}
}

const (

	// OpenapiListPrivateLinkEndpointsRespItemsItems0StatusPENDING captures enum value "PENDING"
	OpenapiListPrivateLinkEndpointsRespItemsItems0StatusPENDING string = "PENDING"

	// OpenapiListPrivateLinkEndpointsRespItemsItems0StatusACTIVE captures enum value "ACTIVE"
	OpenapiListPrivateLinkEndpointsRespItemsItems0StatusACTIVE string = "ACTIVE"

	// OpenapiListPrivateLinkEndpointsRespItemsItems0StatusDELETING captures enum value "DELETING"
	OpenapiListPrivateLinkEndpointsRespItemsItems0StatusDELETING string = "DELETING"

	// OpenapiListPrivateLinkEndpointsRespItemsItems0StatusFAILED captures enum value "FAILED"
	OpenapiListPrivateLinkEndpointsRespItemsItems0StatusFAILED string = "FAILED"
)

// prop value enum
func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, openapiListPrivateLinkEndpointsRespItemsItems0TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this openapi list private link endpoints resp items items0 based on context it is used
func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenapiListPrivateLinkEndpointsRespItemsItems0) UnmarshalBinary(b []byte) error {
	var res OpenapiListPrivateLinkEndpointsRespItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
