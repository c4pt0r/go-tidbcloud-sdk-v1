// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OpenapiClusterType openapi cluster type
//
// swagger:model openapiClusterType
type OpenapiClusterType string

func NewOpenapiClusterType(value OpenapiClusterType) *OpenapiClusterType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OpenapiClusterType.
func (m OpenapiClusterType) Pointer() *OpenapiClusterType {
	return &m
}

const (

	// OpenapiClusterTypeDEDICATED captures enum value "DEDICATED"
	OpenapiClusterTypeDEDICATED OpenapiClusterType = "DEDICATED"

	// OpenapiClusterTypeDEVELOPER captures enum value "DEVELOPER"
	OpenapiClusterTypeDEVELOPER OpenapiClusterType = "DEVELOPER"
)

// for schema
var openapiClusterTypeEnum []interface{}

func init() {
	var res []OpenapiClusterType
	if err := json.Unmarshal([]byte(`["DEDICATED","DEVELOPER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openapiClusterTypeEnum = append(openapiClusterTypeEnum, v)
	}
}

func (m OpenapiClusterType) validateOpenapiClusterTypeEnum(path, location string, value OpenapiClusterType) error {
	if err := validate.EnumCase(path, location, value, openapiClusterTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this openapi cluster type
func (m OpenapiClusterType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenapiClusterTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this openapi cluster type based on context it is used
func (m OpenapiClusterType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
