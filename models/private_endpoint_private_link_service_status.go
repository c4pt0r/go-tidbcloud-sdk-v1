// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PrivateEndpointPrivateLinkServiceStatus private endpoint private link service status
//
// swagger:model PrivateEndpointPrivateLinkServiceStatus
type PrivateEndpointPrivateLinkServiceStatus string

func NewPrivateEndpointPrivateLinkServiceStatus(value PrivateEndpointPrivateLinkServiceStatus) *PrivateEndpointPrivateLinkServiceStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PrivateEndpointPrivateLinkServiceStatus.
func (m PrivateEndpointPrivateLinkServiceStatus) Pointer() *PrivateEndpointPrivateLinkServiceStatus {
	return &m
}

const (

	// PrivateEndpointPrivateLinkServiceStatusCREATING captures enum value "CREATING"
	PrivateEndpointPrivateLinkServiceStatusCREATING PrivateEndpointPrivateLinkServiceStatus = "CREATING"

	// PrivateEndpointPrivateLinkServiceStatusACTIVE captures enum value "ACTIVE"
	PrivateEndpointPrivateLinkServiceStatusACTIVE PrivateEndpointPrivateLinkServiceStatus = "ACTIVE"

	// PrivateEndpointPrivateLinkServiceStatusDELETING captures enum value "DELETING"
	PrivateEndpointPrivateLinkServiceStatusDELETING PrivateEndpointPrivateLinkServiceStatus = "DELETING"
)

// for schema
var privateEndpointPrivateLinkServiceStatusEnum []interface{}

func init() {
	var res []PrivateEndpointPrivateLinkServiceStatus
	if err := json.Unmarshal([]byte(`["CREATING","ACTIVE","DELETING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		privateEndpointPrivateLinkServiceStatusEnum = append(privateEndpointPrivateLinkServiceStatusEnum, v)
	}
}

func (m PrivateEndpointPrivateLinkServiceStatus) validatePrivateEndpointPrivateLinkServiceStatusEnum(path, location string, value PrivateEndpointPrivateLinkServiceStatus) error {
	if err := validate.EnumCase(path, location, value, privateEndpointPrivateLinkServiceStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this private endpoint private link service status
func (m PrivateEndpointPrivateLinkServiceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePrivateEndpointPrivateLinkServiceStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this private endpoint private link service status based on context it is used
func (m PrivateEndpointPrivateLinkServiceStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
