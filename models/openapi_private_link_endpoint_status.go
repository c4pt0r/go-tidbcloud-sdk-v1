// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OpenapiPrivateLinkEndpointStatus openapi private link endpoint status
//
// swagger:model openapiPrivateLinkEndpointStatus
type OpenapiPrivateLinkEndpointStatus string

func NewOpenapiPrivateLinkEndpointStatus(value OpenapiPrivateLinkEndpointStatus) *OpenapiPrivateLinkEndpointStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OpenapiPrivateLinkEndpointStatus.
func (m OpenapiPrivateLinkEndpointStatus) Pointer() *OpenapiPrivateLinkEndpointStatus {
	return &m
}

const (

	// OpenapiPrivateLinkEndpointStatusPENDING captures enum value "PENDING"
	OpenapiPrivateLinkEndpointStatusPENDING OpenapiPrivateLinkEndpointStatus = "PENDING"

	// OpenapiPrivateLinkEndpointStatusACTIVE captures enum value "ACTIVE"
	OpenapiPrivateLinkEndpointStatusACTIVE OpenapiPrivateLinkEndpointStatus = "ACTIVE"

	// OpenapiPrivateLinkEndpointStatusDELETING captures enum value "DELETING"
	OpenapiPrivateLinkEndpointStatusDELETING OpenapiPrivateLinkEndpointStatus = "DELETING"

	// OpenapiPrivateLinkEndpointStatusFAILED captures enum value "FAILED"
	OpenapiPrivateLinkEndpointStatusFAILED OpenapiPrivateLinkEndpointStatus = "FAILED"
)

// for schema
var openapiPrivateLinkEndpointStatusEnum []interface{}

func init() {
	var res []OpenapiPrivateLinkEndpointStatus
	if err := json.Unmarshal([]byte(`["PENDING","ACTIVE","DELETING","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openapiPrivateLinkEndpointStatusEnum = append(openapiPrivateLinkEndpointStatusEnum, v)
	}
}

func (m OpenapiPrivateLinkEndpointStatus) validateOpenapiPrivateLinkEndpointStatusEnum(path, location string, value OpenapiPrivateLinkEndpointStatus) error {
	if err := validate.EnumCase(path, location, value, openapiPrivateLinkEndpointStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this openapi private link endpoint status
func (m OpenapiPrivateLinkEndpointStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenapiPrivateLinkEndpointStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this openapi private link endpoint status based on context it is used
func (m OpenapiPrivateLinkEndpointStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
