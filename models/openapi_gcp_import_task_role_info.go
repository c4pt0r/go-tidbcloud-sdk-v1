// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpenapiGcpImportTaskRoleInfo GcpImportTaskRoleInfo
//
// GcpImportTaskRoleInfo is the role information for import tasks on a GCP cluster.
//
// swagger:model openapiGcpImportTaskRoleInfo
type OpenapiGcpImportTaskRoleInfo struct {

	// The account ID under which the import tasks for this cluster are running.
	// Example: example-account@example.com
	// Required: true
	AccountID *string `json:"account_id"`
}

// Validate validates this openapi gcp import task role info
func (m *OpenapiGcpImportTaskRoleInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenapiGcpImportTaskRoleInfo) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("account_id", "body", m.AccountID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this openapi gcp import task role info based on context it is used
func (m *OpenapiGcpImportTaskRoleInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenapiGcpImportTaskRoleInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenapiGcpImportTaskRoleInfo) UnmarshalBinary(b []byte) error {
	var res OpenapiGcpImportTaskRoleInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
