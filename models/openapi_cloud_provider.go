// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OpenapiCloudProvider openapi cloud provider
//
// swagger:model openapiCloudProvider
type OpenapiCloudProvider string

func NewOpenapiCloudProvider(value OpenapiCloudProvider) *OpenapiCloudProvider {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OpenapiCloudProvider.
func (m OpenapiCloudProvider) Pointer() *OpenapiCloudProvider {
	return &m
}

const (

	// OpenapiCloudProviderAWS captures enum value "AWS"
	OpenapiCloudProviderAWS OpenapiCloudProvider = "AWS"

	// OpenapiCloudProviderGCP captures enum value "GCP"
	OpenapiCloudProviderGCP OpenapiCloudProvider = "GCP"
)

// for schema
var openapiCloudProviderEnum []interface{}

func init() {
	var res []OpenapiCloudProvider
	if err := json.Unmarshal([]byte(`["AWS","GCP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openapiCloudProviderEnum = append(openapiCloudProviderEnum, v)
	}
}

func (m OpenapiCloudProvider) validateOpenapiCloudProviderEnum(path, location string, value OpenapiCloudProvider) error {
	if err := validate.EnumCase(path, location, value, openapiCloudProviderEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this openapi cloud provider
func (m OpenapiCloudProvider) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenapiCloudProviderEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this openapi cloud provider based on context it is used
func (m OpenapiCloudProvider) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
