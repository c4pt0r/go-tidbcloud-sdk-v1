// Code generated by go-swagger; DO NOT EDIT.

package restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateRestoreTaskReader is a Reader for the CreateRestoreTask structure.
type CreateRestoreTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRestoreTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRestoreTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRestoreTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateRestoreTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRestoreTaskForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRestoreTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateRestoreTaskTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRestoreTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateRestoreTaskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRestoreTaskOK creates a CreateRestoreTaskOK with default headers values
func NewCreateRestoreTaskOK() *CreateRestoreTaskOK {
	return &CreateRestoreTaskOK{}
}

/*
CreateRestoreTaskOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateRestoreTaskOK struct {
	Payload *CreateRestoreTaskOKBody
}

// IsSuccess returns true when this create restore task o k response has a 2xx status code
func (o *CreateRestoreTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create restore task o k response has a 3xx status code
func (o *CreateRestoreTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task o k response has a 4xx status code
func (o *CreateRestoreTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create restore task o k response has a 5xx status code
func (o *CreateRestoreTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task o k response a status code equal to that given
func (o *CreateRestoreTaskOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateRestoreTaskOK) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskOK  %+v", 200, o.Payload)
}

func (o *CreateRestoreTaskOK) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskOK  %+v", 200, o.Payload)
}

func (o *CreateRestoreTaskOK) GetPayload() *CreateRestoreTaskOKBody {
	return o.Payload
}

func (o *CreateRestoreTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskBadRequest creates a CreateRestoreTaskBadRequest with default headers values
func NewCreateRestoreTaskBadRequest() *CreateRestoreTaskBadRequest {
	return &CreateRestoreTaskBadRequest{}
}

/*
CreateRestoreTaskBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type CreateRestoreTaskBadRequest struct {
	Payload *CreateRestoreTaskBadRequestBody
}

// IsSuccess returns true when this create restore task bad request response has a 2xx status code
func (o *CreateRestoreTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task bad request response has a 3xx status code
func (o *CreateRestoreTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task bad request response has a 4xx status code
func (o *CreateRestoreTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create restore task bad request response has a 5xx status code
func (o *CreateRestoreTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task bad request response a status code equal to that given
func (o *CreateRestoreTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateRestoreTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRestoreTaskBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRestoreTaskBadRequest) GetPayload() *CreateRestoreTaskBadRequestBody {
	return o.Payload
}

func (o *CreateRestoreTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskUnauthorized creates a CreateRestoreTaskUnauthorized with default headers values
func NewCreateRestoreTaskUnauthorized() *CreateRestoreTaskUnauthorized {
	return &CreateRestoreTaskUnauthorized{}
}

/*
CreateRestoreTaskUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type CreateRestoreTaskUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this create restore task unauthorized response has a 2xx status code
func (o *CreateRestoreTaskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task unauthorized response has a 3xx status code
func (o *CreateRestoreTaskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task unauthorized response has a 4xx status code
func (o *CreateRestoreTaskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create restore task unauthorized response has a 5xx status code
func (o *CreateRestoreTaskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task unauthorized response a status code equal to that given
func (o *CreateRestoreTaskUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateRestoreTaskUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRestoreTaskUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRestoreTaskUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateRestoreTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskForbidden creates a CreateRestoreTaskForbidden with default headers values
func NewCreateRestoreTaskForbidden() *CreateRestoreTaskForbidden {
	return &CreateRestoreTaskForbidden{}
}

/*
CreateRestoreTaskForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type CreateRestoreTaskForbidden struct {
	Payload *CreateRestoreTaskForbiddenBody
}

// IsSuccess returns true when this create restore task forbidden response has a 2xx status code
func (o *CreateRestoreTaskForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task forbidden response has a 3xx status code
func (o *CreateRestoreTaskForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task forbidden response has a 4xx status code
func (o *CreateRestoreTaskForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create restore task forbidden response has a 5xx status code
func (o *CreateRestoreTaskForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task forbidden response a status code equal to that given
func (o *CreateRestoreTaskForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateRestoreTaskForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskForbidden  %+v", 403, o.Payload)
}

func (o *CreateRestoreTaskForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskForbidden  %+v", 403, o.Payload)
}

func (o *CreateRestoreTaskForbidden) GetPayload() *CreateRestoreTaskForbiddenBody {
	return o.Payload
}

func (o *CreateRestoreTaskForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskNotFound creates a CreateRestoreTaskNotFound with default headers values
func NewCreateRestoreTaskNotFound() *CreateRestoreTaskNotFound {
	return &CreateRestoreTaskNotFound{}
}

/*
CreateRestoreTaskNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type CreateRestoreTaskNotFound struct {
	Payload *CreateRestoreTaskNotFoundBody
}

// IsSuccess returns true when this create restore task not found response has a 2xx status code
func (o *CreateRestoreTaskNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task not found response has a 3xx status code
func (o *CreateRestoreTaskNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task not found response has a 4xx status code
func (o *CreateRestoreTaskNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create restore task not found response has a 5xx status code
func (o *CreateRestoreTaskNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task not found response a status code equal to that given
func (o *CreateRestoreTaskNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateRestoreTaskNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskNotFound  %+v", 404, o.Payload)
}

func (o *CreateRestoreTaskNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskNotFound  %+v", 404, o.Payload)
}

func (o *CreateRestoreTaskNotFound) GetPayload() *CreateRestoreTaskNotFoundBody {
	return o.Payload
}

func (o *CreateRestoreTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskTooManyRequests creates a CreateRestoreTaskTooManyRequests with default headers values
func NewCreateRestoreTaskTooManyRequests() *CreateRestoreTaskTooManyRequests {
	return &CreateRestoreTaskTooManyRequests{}
}

/*
CreateRestoreTaskTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type CreateRestoreTaskTooManyRequests struct {
	Payload *CreateRestoreTaskTooManyRequestsBody
}

// IsSuccess returns true when this create restore task too many requests response has a 2xx status code
func (o *CreateRestoreTaskTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task too many requests response has a 3xx status code
func (o *CreateRestoreTaskTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task too many requests response has a 4xx status code
func (o *CreateRestoreTaskTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create restore task too many requests response has a 5xx status code
func (o *CreateRestoreTaskTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create restore task too many requests response a status code equal to that given
func (o *CreateRestoreTaskTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *CreateRestoreTaskTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateRestoreTaskTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateRestoreTaskTooManyRequests) GetPayload() *CreateRestoreTaskTooManyRequestsBody {
	return o.Payload
}

func (o *CreateRestoreTaskTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskInternalServerError creates a CreateRestoreTaskInternalServerError with default headers values
func NewCreateRestoreTaskInternalServerError() *CreateRestoreTaskInternalServerError {
	return &CreateRestoreTaskInternalServerError{}
}

/*
CreateRestoreTaskInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type CreateRestoreTaskInternalServerError struct {
	Payload *CreateRestoreTaskInternalServerErrorBody
}

// IsSuccess returns true when this create restore task internal server error response has a 2xx status code
func (o *CreateRestoreTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create restore task internal server error response has a 3xx status code
func (o *CreateRestoreTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create restore task internal server error response has a 4xx status code
func (o *CreateRestoreTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create restore task internal server error response has a 5xx status code
func (o *CreateRestoreTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create restore task internal server error response a status code equal to that given
func (o *CreateRestoreTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateRestoreTaskInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRestoreTaskInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] createRestoreTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRestoreTaskInternalServerError) GetPayload() *CreateRestoreTaskInternalServerErrorBody {
	return o.Payload
}

func (o *CreateRestoreTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRestoreTaskDefault creates a CreateRestoreTaskDefault with default headers values
func NewCreateRestoreTaskDefault(code int) *CreateRestoreTaskDefault {
	return &CreateRestoreTaskDefault{
		_statusCode: code,
	}
}

/*
CreateRestoreTaskDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateRestoreTaskDefault struct {
	_statusCode int

	Payload *CreateRestoreTaskDefaultBody
}

// Code gets the status code for the create restore task default response
func (o *CreateRestoreTaskDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create restore task default response has a 2xx status code
func (o *CreateRestoreTaskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create restore task default response has a 3xx status code
func (o *CreateRestoreTaskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create restore task default response has a 4xx status code
func (o *CreateRestoreTaskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create restore task default response has a 5xx status code
func (o *CreateRestoreTaskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create restore task default response a status code equal to that given
func (o *CreateRestoreTaskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateRestoreTaskDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] CreateRestoreTask default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRestoreTaskDefault) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/restores][%d] CreateRestoreTask default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRestoreTaskDefault) GetPayload() *CreateRestoreTaskDefaultBody {
	return o.Payload
}

func (o *CreateRestoreTaskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRestoreTaskDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateRestoreTaskBadRequestBody create restore task bad request body
swagger:model CreateRestoreTaskBadRequestBody
*/
type CreateRestoreTaskBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task bad request body
func (o *CreateRestoreTaskBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task bad request body based on context it is used
func (o *CreateRestoreTaskBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskBody CreateRestoreReq
//
// CreateRestoreReq is the request for restoring backup to a new cluster.
swagger:model CreateRestoreTaskBody
*/
type CreateRestoreTaskBody struct {

	// The ID of the backup.
	// Example: 1
	// Required: true
	BackupID *string `json:"backup_id"`

	// config
	Config *CreateRestoreTaskParamsBodyConfig `json:"config,omitempty"`

	// The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
	//
	// - The name must be 4-64 characters that only contain numbers, letters, and hyphens. The first and last character must be a letter or number.
	// - This must be different from the name of the existing cluster.
	// Example: Cluster0
	// Required: true
	// Pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
	Name *string `json:"name"`
}

// Validate validates this create restore task body
func (o *CreateRestoreTaskBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBackupID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskBody) validateBackupID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"backup_id", "body", o.BackupID); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskBody) validateConfig(formats strfmt.Registry) error {
	if swag.IsZero(o.Config) { // not required
		return nil
	}

	if o.Config != nil {
		if err := o.Config.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"name", "body", *o.Name, `^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this create restore task body based on the context it is used
func (o *CreateRestoreTaskBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskBody) contextValidateConfig(ctx context.Context, formats strfmt.Registry) error {

	if o.Config != nil {
		if err := o.Config.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskDefaultBody create restore task default body
swagger:model CreateRestoreTaskDefaultBody
*/
type CreateRestoreTaskDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*CreateRestoreTaskDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task default body
func (o *CreateRestoreTaskDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CreateRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CreateRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create restore task default body based on the context it is used
func (o *CreateRestoreTaskDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CreateRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CreateRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskDefaultBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskDefaultBodyDetailsItems0 create restore task default body details items0
swagger:model CreateRestoreTaskDefaultBodyDetailsItems0
*/
type CreateRestoreTaskDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this create restore task default body details items0
func (o *CreateRestoreTaskDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task default body details items0 based on context it is used
func (o *CreateRestoreTaskDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskForbiddenBody create restore task forbidden body
swagger:model CreateRestoreTaskForbiddenBody
*/
type CreateRestoreTaskForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task forbidden body
func (o *CreateRestoreTaskForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task forbidden body based on context it is used
func (o *CreateRestoreTaskForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskInternalServerErrorBody create restore task internal server error body
swagger:model CreateRestoreTaskInternalServerErrorBody
*/
type CreateRestoreTaskInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task internal server error body
func (o *CreateRestoreTaskInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task internal server error body based on context it is used
func (o *CreateRestoreTaskInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskNotFoundBody create restore task not found body
swagger:model CreateRestoreTaskNotFoundBody
*/
type CreateRestoreTaskNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task not found body
func (o *CreateRestoreTaskNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task not found body based on context it is used
func (o *CreateRestoreTaskNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskOKBody CreateRestoreResp
//
// CreateRestoreResp is the response for restoring backup to a new cluster.
swagger:model CreateRestoreTaskOKBody
*/
type CreateRestoreTaskOKBody struct {

	// The ID of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
	// Example: 1
	ClusterID string `json:"cluster_id,omitempty"`

	// The ID of the restore task.
	// Example: 1
	ID string `json:"id,omitempty"`
}

// Validate validates this create restore task o k body
func (o *CreateRestoreTaskOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task o k body based on context it is used
func (o *CreateRestoreTaskOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskOKBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfig The configuration of the cluster.
swagger:model CreateRestoreTaskParamsBodyConfig
*/
type CreateRestoreTaskParamsBodyConfig struct {

	// components
	Components *CreateRestoreTaskParamsBodyConfigComponents `json:"components,omitempty"`

	// A list of IP addresses and Classless Inter-Domain Routing (CIDR) addresses that are allowed to access the TiDB Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
	IPAccessList []*CreateRestoreTaskParamsBodyConfigIPAccessListItems0 `json:"ip_access_list"`

	// The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.
	//
	// **Limitations**:
	// - For a Serverless Tier cluster, only port `4000` is available.
	// Example: 4000
	// Maximum: 65535
	// Minimum: 1024
	Port int32 `json:"port,omitempty"`

	// The root password to access the cluster. It must be 8-64 characters.
	// Example: password_example
	// Required: true
	// Max Length: 64
	// Min Length: 8
	RootPassword *string `json:"root_password"`
}

// Validate validates this create restore task params body config
func (o *CreateRestoreTaskParamsBodyConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComponents(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIPAccessList(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePort(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRootPassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) validateComponents(formats strfmt.Registry) error {
	if swag.IsZero(o.Components) { // not required
		return nil
	}

	if o.Components != nil {
		if err := o.Components.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) validateIPAccessList(formats strfmt.Registry) error {
	if swag.IsZero(o.IPAccessList) { // not required
		return nil
	}

	for i := 0; i < len(o.IPAccessList); i++ {
		if swag.IsZero(o.IPAccessList[i]) { // not required
			continue
		}

		if o.IPAccessList[i] != nil {
			if err := o.IPAccessList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "config" + "." + "ip_access_list" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "config" + "." + "ip_access_list" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) validatePort(formats strfmt.Registry) error {
	if swag.IsZero(o.Port) { // not required
		return nil
	}

	if err := validate.MinimumInt("body"+"."+"config"+"."+"port", "body", int64(o.Port), 1024, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("body"+"."+"config"+"."+"port", "body", int64(o.Port), 65535, false); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) validateRootPassword(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"root_password", "body", o.RootPassword); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"config"+"."+"root_password", "body", *o.RootPassword, 8); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"config"+"."+"root_password", "body", *o.RootPassword, 64); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this create restore task params body config based on the context it is used
func (o *CreateRestoreTaskParamsBodyConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateComponents(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateIPAccessList(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) contextValidateComponents(ctx context.Context, formats strfmt.Registry) error {

	if o.Components != nil {
		if err := o.Components.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfig) contextValidateIPAccessList(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.IPAccessList); i++ {

		if o.IPAccessList[i] != nil {
			if err := o.IPAccessList[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "config" + "." + "ip_access_list" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "config" + "." + "ip_access_list" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfig) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfigComponents The components of the cluster.
//
// **Limitations**:
// - For a Dedicated Tier cluster, the `components` parameter is **required**.
// - For a Serverless Tier cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
// Example: {"tidb":{"node_quantity":2,"node_size":"8C16G"},"tikv":{"node_quantity":3,"node_size":"8C32G","storage_size_gib":1024}}
swagger:model CreateRestoreTaskParamsBodyConfigComponents
*/
type CreateRestoreTaskParamsBodyConfigComponents struct {

	// tidb
	// Required: true
	Tidb *CreateRestoreTaskParamsBodyConfigComponentsTidb `json:"tidb"`

	// tiflash
	Tiflash *CreateRestoreTaskParamsBodyConfigComponentsTiflash `json:"tiflash,omitempty"`

	// tikv
	// Required: true
	Tikv *CreateRestoreTaskParamsBodyConfigComponentsTikv `json:"tikv"`
}

// Validate validates this create restore task params body config components
func (o *CreateRestoreTaskParamsBodyConfigComponents) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTidb(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTiflash(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTikv(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) validateTidb(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tidb", "body", o.Tidb); err != nil {
		return err
	}

	if o.Tidb != nil {
		if err := o.Tidb.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tidb")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tidb")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) validateTiflash(formats strfmt.Registry) error {
	if swag.IsZero(o.Tiflash) { // not required
		return nil
	}

	if o.Tiflash != nil {
		if err := o.Tiflash.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tiflash")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tiflash")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) validateTikv(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tikv", "body", o.Tikv); err != nil {
		return err
	}

	if o.Tikv != nil {
		if err := o.Tikv.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tikv")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tikv")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create restore task params body config components based on the context it is used
func (o *CreateRestoreTaskParamsBodyConfigComponents) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTidb(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTiflash(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTikv(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) contextValidateTidb(ctx context.Context, formats strfmt.Registry) error {

	if o.Tidb != nil {
		if err := o.Tidb.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tidb")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tidb")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) contextValidateTiflash(ctx context.Context, formats strfmt.Registry) error {

	if o.Tiflash != nil {
		if err := o.Tiflash.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tiflash")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tiflash")
			}
			return err
		}
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponents) contextValidateTikv(ctx context.Context, formats strfmt.Registry) error {

	if o.Tikv != nil {
		if err := o.Tikv.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "config" + "." + "components" + "." + "tikv")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "config" + "." + "components" + "." + "tikv")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponents) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponents) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfigComponents
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfigComponentsTidb The TiDB component of the cluster.
swagger:model CreateRestoreTaskParamsBodyConfigComponentsTidb
*/
type CreateRestoreTaskParamsBodyConfigComponentsTidb struct {

	// The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// Example: 2
	// Required: true
	NodeQuantity *int32 `json:"node_quantity"`

	// The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// **Additional combination rules**:
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
	//
	// **Limitations**:
	// - You cannot decrease `node_size` for TiDB.
	// Example: 8C16G
	// Required: true
	NodeSize *string `json:"node_size"`
}

// Validate validates this create restore task params body config components tidb
func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNodeSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) validateNodeQuantity(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tidb"+"."+"node_quantity", "body", o.NodeQuantity); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) validateNodeSize(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tidb"+"."+"node_size", "body", o.NodeSize); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create restore task params body config components tidb based on context it is used
func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTidb) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfigComponentsTidb
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfigComponentsTiflash The TiFlash component of the cluster.
swagger:model CreateRestoreTaskParamsBodyConfigComponentsTiflash
*/
type CreateRestoreTaskParamsBodyConfigComponentsTiflash struct {

	// The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// **Limitations**:
	// - You cannot decrease node quantity for TiFlash.
	//
	// Example: 1
	// Required: true
	NodeQuantity *int32 `json:"node_quantity"`

	// The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// **Additional combination rules**:
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
	//
	// **Limitations**:
	// - You cannot decrease `node_size` for TiFlash.
	// Example: 8C64G
	// Required: true
	NodeSize *string `json:"node_size"`

	// The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// Example: 1024
	// Required: true
	StorageSizeGib *int32 `json:"storage_size_gib"`
}

// Validate validates this create restore task params body config components tiflash
func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNodeSize(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStorageSizeGib(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) validateNodeQuantity(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tiflash"+"."+"node_quantity", "body", o.NodeQuantity); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) validateNodeSize(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tiflash"+"."+"node_size", "body", o.NodeSize); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) validateStorageSizeGib(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tiflash"+"."+"storage_size_gib", "body", o.StorageSizeGib); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create restore task params body config components tiflash based on context it is used
func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTiflash) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfigComponentsTiflash
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfigComponentsTikv The TiKV component of the cluster.
swagger:model CreateRestoreTaskParamsBodyConfigComponentsTikv
*/
type CreateRestoreTaskParamsBodyConfigComponentsTikv struct {

	// The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// **Limitations**:
	// - You cannot decrease node quantity for TiKV.
	// - The `node_quantity` of TiKV must be a multiple of 3.
	// Example: 3
	// Required: true
	NodeQuantity *int32 `json:"node_quantity"`

	// The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// **Additional combination rules**:
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
	// - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
	//
	// **Limitations**:
	// - You cannot decrease `node_size` for TiKV
	// Example: 8C64G
	// Required: true
	NodeSize *string `json:"node_size"`

	// The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	// Example: 1024
	// Required: true
	StorageSizeGib *int32 `json:"storage_size_gib"`
}

// Validate validates this create restore task params body config components tikv
func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNodeSize(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStorageSizeGib(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) validateNodeQuantity(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tikv"+"."+"node_quantity", "body", o.NodeQuantity); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) validateNodeSize(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tikv"+"."+"node_size", "body", o.NodeSize); err != nil {
		return err
	}

	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) validateStorageSizeGib(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"config"+"."+"components"+"."+"tikv"+"."+"storage_size_gib", "body", o.StorageSizeGib); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create restore task params body config components tikv based on context it is used
func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigComponentsTikv) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfigComponentsTikv
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskParamsBodyConfigIPAccessListItems0 create restore task params body config IP access list items0
swagger:model CreateRestoreTaskParamsBodyConfigIPAccessListItems0
*/
type CreateRestoreTaskParamsBodyConfigIPAccessListItems0 struct {

	// The IP address or CIDR range that you want to add to the cluster's IP access list.
	// Example: 8.8.8.8/32
	// Required: true
	Cidr *string `json:"cidr"`

	// Description that explains the purpose of the entry.
	// Example: My Current IP Address
	Description string `json:"description,omitempty"`
}

// Validate validates this create restore task params body config IP access list items0
func (o *CreateRestoreTaskParamsBodyConfigIPAccessListItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCidr(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRestoreTaskParamsBodyConfigIPAccessListItems0) validateCidr(formats strfmt.Registry) error {

	if err := validate.Required("cidr", "body", o.Cidr); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create restore task params body config IP access list items0 based on context it is used
func (o *CreateRestoreTaskParamsBodyConfigIPAccessListItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigIPAccessListItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskParamsBodyConfigIPAccessListItems0) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskParamsBodyConfigIPAccessListItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateRestoreTaskTooManyRequestsBody create restore task too many requests body
swagger:model CreateRestoreTaskTooManyRequestsBody
*/
type CreateRestoreTaskTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create restore task too many requests body
func (o *CreateRestoreTaskTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restore task too many requests body based on context it is used
func (o *CreateRestoreTaskTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRestoreTaskTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRestoreTaskTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res CreateRestoreTaskTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
