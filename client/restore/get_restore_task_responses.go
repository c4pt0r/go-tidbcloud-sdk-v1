// Code generated by go-swagger; DO NOT EDIT.

package restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetRestoreTaskReader is a Reader for the GetRestoreTask structure.
type GetRestoreTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRestoreTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRestoreTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRestoreTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRestoreTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRestoreTaskForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRestoreTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRestoreTaskTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRestoreTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetRestoreTaskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRestoreTaskOK creates a GetRestoreTaskOK with default headers values
func NewGetRestoreTaskOK() *GetRestoreTaskOK {
	return &GetRestoreTaskOK{}
}

/*
GetRestoreTaskOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetRestoreTaskOK struct {
	Payload *GetRestoreTaskOKBody
}

// IsSuccess returns true when this get restore task o k response has a 2xx status code
func (o *GetRestoreTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get restore task o k response has a 3xx status code
func (o *GetRestoreTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task o k response has a 4xx status code
func (o *GetRestoreTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get restore task o k response has a 5xx status code
func (o *GetRestoreTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task o k response a status code equal to that given
func (o *GetRestoreTaskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get restore task o k response
func (o *GetRestoreTaskOK) Code() int {
	return 200
}

func (o *GetRestoreTaskOK) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskOK  %+v", 200, o.Payload)
}

func (o *GetRestoreTaskOK) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskOK  %+v", 200, o.Payload)
}

func (o *GetRestoreTaskOK) GetPayload() *GetRestoreTaskOKBody {
	return o.Payload
}

func (o *GetRestoreTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskBadRequest creates a GetRestoreTaskBadRequest with default headers values
func NewGetRestoreTaskBadRequest() *GetRestoreTaskBadRequest {
	return &GetRestoreTaskBadRequest{}
}

/*
GetRestoreTaskBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type GetRestoreTaskBadRequest struct {
	Payload *GetRestoreTaskBadRequestBody
}

// IsSuccess returns true when this get restore task bad request response has a 2xx status code
func (o *GetRestoreTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task bad request response has a 3xx status code
func (o *GetRestoreTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task bad request response has a 4xx status code
func (o *GetRestoreTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get restore task bad request response has a 5xx status code
func (o *GetRestoreTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task bad request response a status code equal to that given
func (o *GetRestoreTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get restore task bad request response
func (o *GetRestoreTaskBadRequest) Code() int {
	return 400
}

func (o *GetRestoreTaskBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GetRestoreTaskBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GetRestoreTaskBadRequest) GetPayload() *GetRestoreTaskBadRequestBody {
	return o.Payload
}

func (o *GetRestoreTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskUnauthorized creates a GetRestoreTaskUnauthorized with default headers values
func NewGetRestoreTaskUnauthorized() *GetRestoreTaskUnauthorized {
	return &GetRestoreTaskUnauthorized{}
}

/*
GetRestoreTaskUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type GetRestoreTaskUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get restore task unauthorized response has a 2xx status code
func (o *GetRestoreTaskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task unauthorized response has a 3xx status code
func (o *GetRestoreTaskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task unauthorized response has a 4xx status code
func (o *GetRestoreTaskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get restore task unauthorized response has a 5xx status code
func (o *GetRestoreTaskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task unauthorized response a status code equal to that given
func (o *GetRestoreTaskUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get restore task unauthorized response
func (o *GetRestoreTaskUnauthorized) Code() int {
	return 401
}

func (o *GetRestoreTaskUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRestoreTaskUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRestoreTaskUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRestoreTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskForbidden creates a GetRestoreTaskForbidden with default headers values
func NewGetRestoreTaskForbidden() *GetRestoreTaskForbidden {
	return &GetRestoreTaskForbidden{}
}

/*
GetRestoreTaskForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type GetRestoreTaskForbidden struct {
	Payload *GetRestoreTaskForbiddenBody
}

// IsSuccess returns true when this get restore task forbidden response has a 2xx status code
func (o *GetRestoreTaskForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task forbidden response has a 3xx status code
func (o *GetRestoreTaskForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task forbidden response has a 4xx status code
func (o *GetRestoreTaskForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get restore task forbidden response has a 5xx status code
func (o *GetRestoreTaskForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task forbidden response a status code equal to that given
func (o *GetRestoreTaskForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get restore task forbidden response
func (o *GetRestoreTaskForbidden) Code() int {
	return 403
}

func (o *GetRestoreTaskForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskForbidden  %+v", 403, o.Payload)
}

func (o *GetRestoreTaskForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskForbidden  %+v", 403, o.Payload)
}

func (o *GetRestoreTaskForbidden) GetPayload() *GetRestoreTaskForbiddenBody {
	return o.Payload
}

func (o *GetRestoreTaskForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskNotFound creates a GetRestoreTaskNotFound with default headers values
func NewGetRestoreTaskNotFound() *GetRestoreTaskNotFound {
	return &GetRestoreTaskNotFound{}
}

/*
GetRestoreTaskNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type GetRestoreTaskNotFound struct {
	Payload *GetRestoreTaskNotFoundBody
}

// IsSuccess returns true when this get restore task not found response has a 2xx status code
func (o *GetRestoreTaskNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task not found response has a 3xx status code
func (o *GetRestoreTaskNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task not found response has a 4xx status code
func (o *GetRestoreTaskNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get restore task not found response has a 5xx status code
func (o *GetRestoreTaskNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task not found response a status code equal to that given
func (o *GetRestoreTaskNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get restore task not found response
func (o *GetRestoreTaskNotFound) Code() int {
	return 404
}

func (o *GetRestoreTaskNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskNotFound  %+v", 404, o.Payload)
}

func (o *GetRestoreTaskNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskNotFound  %+v", 404, o.Payload)
}

func (o *GetRestoreTaskNotFound) GetPayload() *GetRestoreTaskNotFoundBody {
	return o.Payload
}

func (o *GetRestoreTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskTooManyRequests creates a GetRestoreTaskTooManyRequests with default headers values
func NewGetRestoreTaskTooManyRequests() *GetRestoreTaskTooManyRequests {
	return &GetRestoreTaskTooManyRequests{}
}

/*
GetRestoreTaskTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type GetRestoreTaskTooManyRequests struct {
	Payload *GetRestoreTaskTooManyRequestsBody
}

// IsSuccess returns true when this get restore task too many requests response has a 2xx status code
func (o *GetRestoreTaskTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task too many requests response has a 3xx status code
func (o *GetRestoreTaskTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task too many requests response has a 4xx status code
func (o *GetRestoreTaskTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get restore task too many requests response has a 5xx status code
func (o *GetRestoreTaskTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get restore task too many requests response a status code equal to that given
func (o *GetRestoreTaskTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get restore task too many requests response
func (o *GetRestoreTaskTooManyRequests) Code() int {
	return 429
}

func (o *GetRestoreTaskTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRestoreTaskTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRestoreTaskTooManyRequests) GetPayload() *GetRestoreTaskTooManyRequestsBody {
	return o.Payload
}

func (o *GetRestoreTaskTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskInternalServerError creates a GetRestoreTaskInternalServerError with default headers values
func NewGetRestoreTaskInternalServerError() *GetRestoreTaskInternalServerError {
	return &GetRestoreTaskInternalServerError{}
}

/*
GetRestoreTaskInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type GetRestoreTaskInternalServerError struct {
	Payload *GetRestoreTaskInternalServerErrorBody
}

// IsSuccess returns true when this get restore task internal server error response has a 2xx status code
func (o *GetRestoreTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get restore task internal server error response has a 3xx status code
func (o *GetRestoreTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get restore task internal server error response has a 4xx status code
func (o *GetRestoreTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get restore task internal server error response has a 5xx status code
func (o *GetRestoreTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get restore task internal server error response a status code equal to that given
func (o *GetRestoreTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get restore task internal server error response
func (o *GetRestoreTaskInternalServerError) Code() int {
	return 500
}

func (o *GetRestoreTaskInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRestoreTaskInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] getRestoreTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRestoreTaskInternalServerError) GetPayload() *GetRestoreTaskInternalServerErrorBody {
	return o.Payload
}

func (o *GetRestoreTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRestoreTaskDefault creates a GetRestoreTaskDefault with default headers values
func NewGetRestoreTaskDefault(code int) *GetRestoreTaskDefault {
	return &GetRestoreTaskDefault{
		_statusCode: code,
	}
}

/*
GetRestoreTaskDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetRestoreTaskDefault struct {
	_statusCode int

	Payload *GetRestoreTaskDefaultBody
}

// IsSuccess returns true when this get restore task default response has a 2xx status code
func (o *GetRestoreTaskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get restore task default response has a 3xx status code
func (o *GetRestoreTaskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get restore task default response has a 4xx status code
func (o *GetRestoreTaskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get restore task default response has a 5xx status code
func (o *GetRestoreTaskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get restore task default response a status code equal to that given
func (o *GetRestoreTaskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get restore task default response
func (o *GetRestoreTaskDefault) Code() int {
	return o._statusCode
}

func (o *GetRestoreTaskDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] GetRestoreTask default  %+v", o._statusCode, o.Payload)
}

func (o *GetRestoreTaskDefault) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/restores/{restore_id}][%d] GetRestoreTask default  %+v", o._statusCode, o.Payload)
}

func (o *GetRestoreTaskDefault) GetPayload() *GetRestoreTaskDefaultBody {
	return o.Payload
}

func (o *GetRestoreTaskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRestoreTaskDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetRestoreTaskBadRequestBody get restore task bad request body
swagger:model GetRestoreTaskBadRequestBody
*/
type GetRestoreTaskBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task bad request body
func (o *GetRestoreTaskBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task bad request body based on context it is used
func (o *GetRestoreTaskBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskDefaultBody get restore task default body
swagger:model GetRestoreTaskDefaultBody
*/
type GetRestoreTaskDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*GetRestoreTaskDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task default body
func (o *GetRestoreTaskDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRestoreTaskDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get restore task default body based on the context it is used
func (o *GetRestoreTaskDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRestoreTaskDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetRestoreTask default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskDefaultBodyDetailsItems0 get restore task default body details items0
swagger:model GetRestoreTaskDefaultBodyDetailsItems0
*/
type GetRestoreTaskDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get restore task default body details items0
func (o *GetRestoreTaskDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task default body details items0 based on context it is used
func (o *GetRestoreTaskDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskForbiddenBody get restore task forbidden body
swagger:model GetRestoreTaskForbiddenBody
*/
type GetRestoreTaskForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task forbidden body
func (o *GetRestoreTaskForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task forbidden body based on context it is used
func (o *GetRestoreTaskForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskInternalServerErrorBody get restore task internal server error body
swagger:model GetRestoreTaskInternalServerErrorBody
*/
type GetRestoreTaskInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task internal server error body
func (o *GetRestoreTaskInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task internal server error body based on context it is used
func (o *GetRestoreTaskInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskNotFoundBody get restore task not found body
swagger:model GetRestoreTaskNotFoundBody
*/
type GetRestoreTaskNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task not found body
func (o *GetRestoreTaskNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task not found body based on context it is used
func (o *GetRestoreTaskNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskOKBody GetRestoreResp
//
// The response for get restore.
swagger:model GetRestoreTaskOKBody
*/
type GetRestoreTaskOKBody struct {

	// The ID of the backup.
	// Example: 1
	BackupID string `json:"backup_id,omitempty"`

	// cluster
	Cluster *GetRestoreTaskOKBodyCluster `json:"cluster,omitempty"`

	// The cluster ID of the backup.
	// Example: 1
	ClusterID string `json:"cluster_id,omitempty"`

	// The creation time of the backup in UTC.
	//
	// The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
	// Example: 2020-01-01T00:00:00Z
	// Format: date-time
	CreateTimestamp strfmt.DateTime `json:"create_timestamp,omitempty"`

	// The error message of restore if failed.
	// Example: Please contact support.
	ErrorMessage string `json:"error_message,omitempty"`

	// The ID of the restore task.
	// Example: 1
	ID string `json:"id,omitempty"`

	// The status of the restore task.
	// Example: PENDING
	// Enum: [PENDING RUNNING FAILED SUCCESS]
	Status string `json:"status,omitempty"`
}

// Validate validates this get restore task o k body
func (o *GetRestoreTaskOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCluster(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRestoreTaskOKBody) validateCluster(formats strfmt.Registry) error {
	if swag.IsZero(o.Cluster) { // not required
		return nil
	}

	if o.Cluster != nil {
		if err := o.Cluster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getRestoreTaskOK" + "." + "cluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getRestoreTaskOK" + "." + "cluster")
			}
			return err
		}
	}

	return nil
}

func (o *GetRestoreTaskOKBody) validateCreateTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(o.CreateTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getRestoreTaskOK"+"."+"create_timestamp", "body", "date-time", o.CreateTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

var getRestoreTaskOKBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PENDING","RUNNING","FAILED","SUCCESS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getRestoreTaskOKBodyTypeStatusPropEnum = append(getRestoreTaskOKBodyTypeStatusPropEnum, v)
	}
}

const (

	// GetRestoreTaskOKBodyStatusPENDING captures enum value "PENDING"
	GetRestoreTaskOKBodyStatusPENDING string = "PENDING"

	// GetRestoreTaskOKBodyStatusRUNNING captures enum value "RUNNING"
	GetRestoreTaskOKBodyStatusRUNNING string = "RUNNING"

	// GetRestoreTaskOKBodyStatusFAILED captures enum value "FAILED"
	GetRestoreTaskOKBodyStatusFAILED string = "FAILED"

	// GetRestoreTaskOKBodyStatusSUCCESS captures enum value "SUCCESS"
	GetRestoreTaskOKBodyStatusSUCCESS string = "SUCCESS"
)

// prop value enum
func (o *GetRestoreTaskOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getRestoreTaskOKBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetRestoreTaskOKBody) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("getRestoreTaskOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get restore task o k body based on the context it is used
func (o *GetRestoreTaskOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCluster(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRestoreTaskOKBody) contextValidateCluster(ctx context.Context, formats strfmt.Registry) error {

	if o.Cluster != nil {

		if swag.IsZero(o.Cluster) { // not required
			return nil
		}

		if err := o.Cluster.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getRestoreTaskOK" + "." + "cluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getRestoreTaskOK" + "." + "cluster")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskOKBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskOKBodyCluster ClusterInfoOfRestore
//
// The information of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
swagger:model GetRestoreTaskOKBodyCluster
*/
type GetRestoreTaskOKBodyCluster struct {

	// The ID of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
	// Example: 1
	ID string `json:"id,omitempty"`

	// The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
	// Example: cluster-1
	Name string `json:"name,omitempty"`

	// The status of the restored cluster. Possible values are `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`, `"PAUSED"`, `"RESUMING"`, `"UNAVAILABLE"`, `"IMPORTING"`, and `"CLEARED"`.
	// Example: AVAILABLE
	Status string `json:"status,omitempty"`
}

// Validate validates this get restore task o k body cluster
func (o *GetRestoreTaskOKBodyCluster) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task o k body cluster based on context it is used
func (o *GetRestoreTaskOKBodyCluster) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskOKBodyCluster) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskOKBodyCluster) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskOKBodyCluster
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRestoreTaskTooManyRequestsBody get restore task too many requests body
swagger:model GetRestoreTaskTooManyRequestsBody
*/
type GetRestoreTaskTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get restore task too many requests body
func (o *GetRestoreTaskTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get restore task too many requests body based on context it is used
func (o *GetRestoreTaskTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRestoreTaskTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRestoreTaskTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetRestoreTaskTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
