// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListProviderRegionsReader is a Reader for the ListProviderRegions structure.
type ListProviderRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProviderRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProviderRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProviderRegionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListProviderRegionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProviderRegionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProviderRegionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListProviderRegionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProviderRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListProviderRegionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListProviderRegionsOK creates a ListProviderRegionsOK with default headers values
func NewListProviderRegionsOK() *ListProviderRegionsOK {
	return &ListProviderRegionsOK{}
}

/*
ListProviderRegionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListProviderRegionsOK struct {
	Payload *ListProviderRegionsOKBody
}

// IsSuccess returns true when this list provider regions o k response has a 2xx status code
func (o *ListProviderRegionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list provider regions o k response has a 3xx status code
func (o *ListProviderRegionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions o k response has a 4xx status code
func (o *ListProviderRegionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list provider regions o k response has a 5xx status code
func (o *ListProviderRegionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions o k response a status code equal to that given
func (o *ListProviderRegionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListProviderRegionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsOK  %+v", 200, o.Payload)
}

func (o *ListProviderRegionsOK) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsOK  %+v", 200, o.Payload)
}

func (o *ListProviderRegionsOK) GetPayload() *ListProviderRegionsOKBody {
	return o.Payload
}

func (o *ListProviderRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsBadRequest creates a ListProviderRegionsBadRequest with default headers values
func NewListProviderRegionsBadRequest() *ListProviderRegionsBadRequest {
	return &ListProviderRegionsBadRequest{}
}

/*
ListProviderRegionsBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type ListProviderRegionsBadRequest struct {
	Payload *ListProviderRegionsBadRequestBody
}

// IsSuccess returns true when this list provider regions bad request response has a 2xx status code
func (o *ListProviderRegionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions bad request response has a 3xx status code
func (o *ListProviderRegionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions bad request response has a 4xx status code
func (o *ListProviderRegionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list provider regions bad request response has a 5xx status code
func (o *ListProviderRegionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions bad request response a status code equal to that given
func (o *ListProviderRegionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListProviderRegionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListProviderRegionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListProviderRegionsBadRequest) GetPayload() *ListProviderRegionsBadRequestBody {
	return o.Payload
}

func (o *ListProviderRegionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsUnauthorized creates a ListProviderRegionsUnauthorized with default headers values
func NewListProviderRegionsUnauthorized() *ListProviderRegionsUnauthorized {
	return &ListProviderRegionsUnauthorized{}
}

/*
ListProviderRegionsUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type ListProviderRegionsUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this list provider regions unauthorized response has a 2xx status code
func (o *ListProviderRegionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions unauthorized response has a 3xx status code
func (o *ListProviderRegionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions unauthorized response has a 4xx status code
func (o *ListProviderRegionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list provider regions unauthorized response has a 5xx status code
func (o *ListProviderRegionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions unauthorized response a status code equal to that given
func (o *ListProviderRegionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListProviderRegionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProviderRegionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProviderRegionsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ListProviderRegionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsForbidden creates a ListProviderRegionsForbidden with default headers values
func NewListProviderRegionsForbidden() *ListProviderRegionsForbidden {
	return &ListProviderRegionsForbidden{}
}

/*
ListProviderRegionsForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type ListProviderRegionsForbidden struct {
	Payload *ListProviderRegionsForbiddenBody
}

// IsSuccess returns true when this list provider regions forbidden response has a 2xx status code
func (o *ListProviderRegionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions forbidden response has a 3xx status code
func (o *ListProviderRegionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions forbidden response has a 4xx status code
func (o *ListProviderRegionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list provider regions forbidden response has a 5xx status code
func (o *ListProviderRegionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions forbidden response a status code equal to that given
func (o *ListProviderRegionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListProviderRegionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsForbidden  %+v", 403, o.Payload)
}

func (o *ListProviderRegionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsForbidden  %+v", 403, o.Payload)
}

func (o *ListProviderRegionsForbidden) GetPayload() *ListProviderRegionsForbiddenBody {
	return o.Payload
}

func (o *ListProviderRegionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsNotFound creates a ListProviderRegionsNotFound with default headers values
func NewListProviderRegionsNotFound() *ListProviderRegionsNotFound {
	return &ListProviderRegionsNotFound{}
}

/*
ListProviderRegionsNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type ListProviderRegionsNotFound struct {
	Payload *ListProviderRegionsNotFoundBody
}

// IsSuccess returns true when this list provider regions not found response has a 2xx status code
func (o *ListProviderRegionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions not found response has a 3xx status code
func (o *ListProviderRegionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions not found response has a 4xx status code
func (o *ListProviderRegionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list provider regions not found response has a 5xx status code
func (o *ListProviderRegionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions not found response a status code equal to that given
func (o *ListProviderRegionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListProviderRegionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsNotFound  %+v", 404, o.Payload)
}

func (o *ListProviderRegionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsNotFound  %+v", 404, o.Payload)
}

func (o *ListProviderRegionsNotFound) GetPayload() *ListProviderRegionsNotFoundBody {
	return o.Payload
}

func (o *ListProviderRegionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsTooManyRequests creates a ListProviderRegionsTooManyRequests with default headers values
func NewListProviderRegionsTooManyRequests() *ListProviderRegionsTooManyRequests {
	return &ListProviderRegionsTooManyRequests{}
}

/*
ListProviderRegionsTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type ListProviderRegionsTooManyRequests struct {
	Payload *ListProviderRegionsTooManyRequestsBody
}

// IsSuccess returns true when this list provider regions too many requests response has a 2xx status code
func (o *ListProviderRegionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions too many requests response has a 3xx status code
func (o *ListProviderRegionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions too many requests response has a 4xx status code
func (o *ListProviderRegionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list provider regions too many requests response has a 5xx status code
func (o *ListProviderRegionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list provider regions too many requests response a status code equal to that given
func (o *ListProviderRegionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListProviderRegionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListProviderRegionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListProviderRegionsTooManyRequests) GetPayload() *ListProviderRegionsTooManyRequestsBody {
	return o.Payload
}

func (o *ListProviderRegionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsInternalServerError creates a ListProviderRegionsInternalServerError with default headers values
func NewListProviderRegionsInternalServerError() *ListProviderRegionsInternalServerError {
	return &ListProviderRegionsInternalServerError{}
}

/*
ListProviderRegionsInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type ListProviderRegionsInternalServerError struct {
	Payload *ListProviderRegionsInternalServerErrorBody
}

// IsSuccess returns true when this list provider regions internal server error response has a 2xx status code
func (o *ListProviderRegionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list provider regions internal server error response has a 3xx status code
func (o *ListProviderRegionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list provider regions internal server error response has a 4xx status code
func (o *ListProviderRegionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list provider regions internal server error response has a 5xx status code
func (o *ListProviderRegionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list provider regions internal server error response a status code equal to that given
func (o *ListProviderRegionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListProviderRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProviderRegionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] listProviderRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProviderRegionsInternalServerError) GetPayload() *ListProviderRegionsInternalServerErrorBody {
	return o.Payload
}

func (o *ListProviderRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProviderRegionsDefault creates a ListProviderRegionsDefault with default headers values
func NewListProviderRegionsDefault(code int) *ListProviderRegionsDefault {
	return &ListProviderRegionsDefault{
		_statusCode: code,
	}
}

/*
ListProviderRegionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListProviderRegionsDefault struct {
	_statusCode int

	Payload *ListProviderRegionsDefaultBody
}

// Code gets the status code for the list provider regions default response
func (o *ListProviderRegionsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list provider regions default response has a 2xx status code
func (o *ListProviderRegionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list provider regions default response has a 3xx status code
func (o *ListProviderRegionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list provider regions default response has a 4xx status code
func (o *ListProviderRegionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list provider regions default response has a 5xx status code
func (o *ListProviderRegionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list provider regions default response a status code equal to that given
func (o *ListProviderRegionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListProviderRegionsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] ListProviderRegions default  %+v", o._statusCode, o.Payload)
}

func (o *ListProviderRegionsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1beta/clusters/provider/regions][%d] ListProviderRegions default  %+v", o._statusCode, o.Payload)
}

func (o *ListProviderRegionsDefault) GetPayload() *ListProviderRegionsDefaultBody {
	return o.Payload
}

func (o *ListProviderRegionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListProviderRegionsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListProviderRegionsBadRequestBody list provider regions bad request body
swagger:model ListProviderRegionsBadRequestBody
*/
type ListProviderRegionsBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions bad request body
func (o *ListProviderRegionsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions bad request body based on context it is used
func (o *ListProviderRegionsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsDefaultBody list provider regions default body
swagger:model ListProviderRegionsDefaultBody
*/
type ListProviderRegionsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*ListProviderRegionsDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions default body
func (o *ListProviderRegionsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListProviderRegions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListProviderRegions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list provider regions default body based on the context it is used
func (o *ListProviderRegionsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListProviderRegions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListProviderRegions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsDefaultBodyDetailsItems0 list provider regions default body details items0
swagger:model ListProviderRegionsDefaultBodyDetailsItems0
*/
type ListProviderRegionsDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this list provider regions default body details items0
func (o *ListProviderRegionsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions default body details items0 based on context it is used
func (o *ListProviderRegionsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsForbiddenBody list provider regions forbidden body
swagger:model ListProviderRegionsForbiddenBody
*/
type ListProviderRegionsForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions forbidden body
func (o *ListProviderRegionsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions forbidden body based on context it is used
func (o *ListProviderRegionsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsInternalServerErrorBody list provider regions internal server error body
swagger:model ListProviderRegionsInternalServerErrorBody
*/
type ListProviderRegionsInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions internal server error body
func (o *ListProviderRegionsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions internal server error body based on context it is used
func (o *ListProviderRegionsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsNotFoundBody list provider regions not found body
swagger:model ListProviderRegionsNotFoundBody
*/
type ListProviderRegionsNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions not found body
func (o *ListProviderRegionsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions not found body based on context it is used
func (o *ListProviderRegionsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBody GetProviderRegionsResp
//
// GetProviderRegionsResp is the response for getting provider regions.
swagger:model ListProviderRegionsOKBody
*/
type ListProviderRegionsOKBody struct {

	// Items of provider regions.
	// Example: [{"cloud_provider":"AWS","cluster_type":"DEDICATED","region":"us-west-2","tidb":[{"node_quantity_range":{"min":1,"step":1},"node_size":"8C16G"}],"tiflash":[{"node_quantity_range":{"min":0,"step":1},"node_size":"8C64G","storage_size_gib_range":{"max":2048,"min":500}}],"tikv":[{"node_quantity_range":{"min":3,"step":3},"node_size":"8C32G","storage_size_gib_range":{"max":4096,"min":500}}]},{"cloud_provider":"AWS","cluster_type":"DEVELOPER","region":"us-west-2","tidb":[{"node_quantity_range":{"min":1,"step":1},"node_size":"Shared0"}],"tiflash":[{"node_quantity_range":{"min":1,"step":1},"node_size":"Shared0","storage_size_gib_range":{"max":1,"min":1}}],"tikv":[{"node_quantity_range":{"min":1,"step":1},"node_size":"Shared0","storage_size_gib_range":{"max":1,"min":1}}]}]
	Items []*ListProviderRegionsOKBodyItemsItems0 `json:"items"`
}

// Validate validates this list provider regions o k body
func (o *ListProviderRegionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listProviderRegionsOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listProviderRegionsOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list provider regions o k body based on the context it is used
func (o *ListProviderRegionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listProviderRegionsOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listProviderRegionsOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0 ListProviderRegionsItem
//
// ListProviderRegionsItem is the item of provider regions.
swagger:model ListProviderRegionsOKBodyItemsItems0
*/
type ListProviderRegionsOKBodyItemsItems0 struct {

	// The cloud provider on which your TiDB cluster is hosted.
	// - `"AWS"`: the Amazon Web Services cloud provider
	// - `"GCP"`: the Google Cloud Platform cloud provider
	// Example: AWS
	// Enum: [AWS GCP]
	CloudProvider string `json:"cloud_provider,omitempty"`

	// The cluster type.
	// - `"DEVELOPER"`: a [Serverless Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#serverless-tier) cluster
	// - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster
	//
	// **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent Serverless Tier clusters.
	// Example: DEDICATED
	// Enum: [DEDICATED DEVELOPER]
	ClusterType string `json:"cluster_type,omitempty"`

	// The region in which your TiDB cluster is hosted.
	//
	// For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).
	//
	// For example, `"us-west-2"` refers to Oregon for AWS.
	// Example: us-west-2
	Region string `json:"region,omitempty"`

	// The list of TiDB specifications in the region.
	Tidb []*ListProviderRegionsOKBodyItemsItems0TidbItems0 `json:"tidb"`

	// The list of TiFlash specifications in the region.
	Tiflash []*ListProviderRegionsOKBodyItemsItems0TiflashItems0 `json:"tiflash"`

	// The list of TiKV specifications in the region.
	Tikv []*ListProviderRegionsOKBodyItemsItems0TikvItems0 `json:"tikv"`
}

// Validate validates this list provider regions o k body items items0
func (o *ListProviderRegionsOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCloudProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClusterType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTidb(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTiflash(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTikv(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var listProviderRegionsOKBodyItemsItems0TypeCloudProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AWS","GCP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listProviderRegionsOKBodyItemsItems0TypeCloudProviderPropEnum = append(listProviderRegionsOKBodyItemsItems0TypeCloudProviderPropEnum, v)
	}
}

const (

	// ListProviderRegionsOKBodyItemsItems0CloudProviderAWS captures enum value "AWS"
	ListProviderRegionsOKBodyItemsItems0CloudProviderAWS string = "AWS"

	// ListProviderRegionsOKBodyItemsItems0CloudProviderGCP captures enum value "GCP"
	ListProviderRegionsOKBodyItemsItems0CloudProviderGCP string = "GCP"
)

// prop value enum
func (o *ListProviderRegionsOKBodyItemsItems0) validateCloudProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listProviderRegionsOKBodyItemsItems0TypeCloudProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) validateCloudProvider(formats strfmt.Registry) error {
	if swag.IsZero(o.CloudProvider) { // not required
		return nil
	}

	// value enum
	if err := o.validateCloudProviderEnum("cloud_provider", "body", o.CloudProvider); err != nil {
		return err
	}

	return nil
}

var listProviderRegionsOKBodyItemsItems0TypeClusterTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEDICATED","DEVELOPER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listProviderRegionsOKBodyItemsItems0TypeClusterTypePropEnum = append(listProviderRegionsOKBodyItemsItems0TypeClusterTypePropEnum, v)
	}
}

const (

	// ListProviderRegionsOKBodyItemsItems0ClusterTypeDEDICATED captures enum value "DEDICATED"
	ListProviderRegionsOKBodyItemsItems0ClusterTypeDEDICATED string = "DEDICATED"

	// ListProviderRegionsOKBodyItemsItems0ClusterTypeDEVELOPER captures enum value "DEVELOPER"
	ListProviderRegionsOKBodyItemsItems0ClusterTypeDEVELOPER string = "DEVELOPER"
)

// prop value enum
func (o *ListProviderRegionsOKBodyItemsItems0) validateClusterTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listProviderRegionsOKBodyItemsItems0TypeClusterTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) validateClusterType(formats strfmt.Registry) error {
	if swag.IsZero(o.ClusterType) { // not required
		return nil
	}

	// value enum
	if err := o.validateClusterTypeEnum("cluster_type", "body", o.ClusterType); err != nil {
		return err
	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) validateTidb(formats strfmt.Registry) error {
	if swag.IsZero(o.Tidb) { // not required
		return nil
	}

	for i := 0; i < len(o.Tidb); i++ {
		if swag.IsZero(o.Tidb[i]) { // not required
			continue
		}

		if o.Tidb[i] != nil {
			if err := o.Tidb[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tidb" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tidb" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) validateTiflash(formats strfmt.Registry) error {
	if swag.IsZero(o.Tiflash) { // not required
		return nil
	}

	for i := 0; i < len(o.Tiflash); i++ {
		if swag.IsZero(o.Tiflash[i]) { // not required
			continue
		}

		if o.Tiflash[i] != nil {
			if err := o.Tiflash[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tiflash" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tiflash" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) validateTikv(formats strfmt.Registry) error {
	if swag.IsZero(o.Tikv) { // not required
		return nil
	}

	for i := 0; i < len(o.Tikv); i++ {
		if swag.IsZero(o.Tikv[i]) { // not required
			continue
		}

		if o.Tikv[i] != nil {
			if err := o.Tikv[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tikv" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tikv" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list provider regions o k body items items0 based on the context it is used
func (o *ListProviderRegionsOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTidb(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTiflash(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTikv(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) contextValidateTidb(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Tidb); i++ {

		if o.Tidb[i] != nil {
			if err := o.Tidb[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tidb" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tidb" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) contextValidateTiflash(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Tiflash); i++ {

		if o.Tiflash[i] != nil {
			if err := o.Tiflash[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tiflash" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tiflash" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0) contextValidateTikv(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Tikv); i++ {

		if o.Tikv[i] != nil {
			if err := o.Tikv[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tikv" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("tikv" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TidbItems0 list provider regions o k body items items0 tidb items0
swagger:model ListProviderRegionsOKBodyItemsItems0TidbItems0
*/
type ListProviderRegionsOKBodyItemsItems0TidbItems0 struct {

	// node quantity range
	NodeQuantityRange *ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange `json:"node_quantity_range,omitempty"`

	// The size of the TiDB component in the cluster.
	// Example: 8C16G
	NodeSize string `json:"node_size,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tidb items0
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantityRange(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) validateNodeQuantityRange(formats strfmt.Registry) error {
	if swag.IsZero(o.NodeQuantityRange) { // not required
		return nil
	}

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this list provider regions o k body items items0 tidb items0 based on the context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateNodeQuantityRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) contextValidateNodeQuantityRange(ctx context.Context, formats strfmt.Registry) error {

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TidbItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange The range and step of node quantity of the TiDB component in the cluster.
swagger:model ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange
*/
type ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange struct {

	// The minimum node quantity of the component in the cluster.
	Min int32 `json:"min,omitempty"`

	// The step of node quantity of the component in the cluster.
	Step int32 `json:"step,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tidb items0 node quantity range
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions o k body items items0 tidb items0 node quantity range based on context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TidbItems0NodeQuantityRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TiflashItems0 list provider regions o k body items items0 tiflash items0
swagger:model ListProviderRegionsOKBodyItemsItems0TiflashItems0
*/
type ListProviderRegionsOKBodyItemsItems0TiflashItems0 struct {

	// node quantity range
	NodeQuantityRange *ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange `json:"node_quantity_range,omitempty"`

	// The size of the TiFlash component in the cluster.
	// Example: 8C64G
	NodeSize string `json:"node_size,omitempty"`

	// storage size gib range
	StorageSizeGibRange *ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange `json:"storage_size_gib_range,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tiflash items0
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantityRange(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStorageSizeGibRange(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) validateNodeQuantityRange(formats strfmt.Registry) error {
	if swag.IsZero(o.NodeQuantityRange) { // not required
		return nil
	}

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) validateStorageSizeGibRange(formats strfmt.Registry) error {
	if swag.IsZero(o.StorageSizeGibRange) { // not required
		return nil
	}

	if o.StorageSizeGibRange != nil {
		if err := o.StorageSizeGibRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("storage_size_gib_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("storage_size_gib_range")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this list provider regions o k body items items0 tiflash items0 based on the context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateNodeQuantityRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateStorageSizeGibRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) contextValidateNodeQuantityRange(ctx context.Context, formats strfmt.Registry) error {

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) contextValidateStorageSizeGibRange(ctx context.Context, formats strfmt.Registry) error {

	if o.StorageSizeGibRange != nil {
		if err := o.StorageSizeGibRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("storage_size_gib_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("storage_size_gib_range")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TiflashItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange The range and step of node quantity of the TiFlash component in the cluster.
swagger:model ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange
*/
type ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange struct {

	// The minimum node quantity of the component in the cluster.
	Min int32 `json:"min,omitempty"`

	// The step of node quantity of the component in the cluster.
	Step int32 `json:"step,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tiflash items0 node quantity range
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions o k body items items0 tiflash items0 node quantity range based on context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TiflashItems0NodeQuantityRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange The storage size range for each node of the TiFlash component in the cluster.
swagger:model ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange
*/
type ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange struct {

	// The maximum storage size for each node of the component in the cluster.
	Max int32 `json:"max,omitempty"`

	// The minimum storage size for each node of the component in the cluster.
	Min int32 `json:"min,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tiflash items0 storage size gib range
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions o k body items items0 tiflash items0 storage size gib range based on context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TiflashItems0StorageSizeGibRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TikvItems0 list provider regions o k body items items0 tikv items0
swagger:model ListProviderRegionsOKBodyItemsItems0TikvItems0
*/
type ListProviderRegionsOKBodyItemsItems0TikvItems0 struct {

	// node quantity range
	NodeQuantityRange *ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange `json:"node_quantity_range,omitempty"`

	// The size of the TiKV component in the cluster.
	// Example: 8C32G
	NodeSize string `json:"node_size,omitempty"`

	// storage size gib range
	StorageSizeGibRange *ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange `json:"storage_size_gib_range,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tikv items0
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodeQuantityRange(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStorageSizeGibRange(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) validateNodeQuantityRange(formats strfmt.Registry) error {
	if swag.IsZero(o.NodeQuantityRange) { // not required
		return nil
	}

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) validateStorageSizeGibRange(formats strfmt.Registry) error {
	if swag.IsZero(o.StorageSizeGibRange) { // not required
		return nil
	}

	if o.StorageSizeGibRange != nil {
		if err := o.StorageSizeGibRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("storage_size_gib_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("storage_size_gib_range")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this list provider regions o k body items items0 tikv items0 based on the context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateNodeQuantityRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateStorageSizeGibRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) contextValidateNodeQuantityRange(ctx context.Context, formats strfmt.Registry) error {

	if o.NodeQuantityRange != nil {
		if err := o.NodeQuantityRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_quantity_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("node_quantity_range")
			}
			return err
		}
	}

	return nil
}

func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) contextValidateStorageSizeGibRange(ctx context.Context, formats strfmt.Registry) error {

	if o.StorageSizeGibRange != nil {
		if err := o.StorageSizeGibRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("storage_size_gib_range")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("storage_size_gib_range")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TikvItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange The range and step of node quantity of the TiKV component in the cluster.
swagger:model ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange
*/
type ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange struct {

	// The minimum node quantity of the component in the cluster.
	Min int32 `json:"min,omitempty"`

	// The step of node quantity of the component in the cluster.
	Step int32 `json:"step,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tikv items0 node quantity range
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions o k body items items0 tikv items0 node quantity range based on context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TikvItems0NodeQuantityRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange The storage size range for each node of the TiKV component in the cluster.
swagger:model ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange
*/
type ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange struct {

	// The maximum storage size for each node of the component in the cluster.
	Max int32 `json:"max,omitempty"`

	// The minimum storage size for each node of the component in the cluster.
	Min int32 `json:"min,omitempty"`
}

// Validate validates this list provider regions o k body items items0 tikv items0 storage size gib range
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions o k body items items0 tikv items0 storage size gib range based on context it is used
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsOKBodyItemsItems0TikvItems0StorageSizeGibRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListProviderRegionsTooManyRequestsBody list provider regions too many requests body
swagger:model ListProviderRegionsTooManyRequestsBody
*/
type ListProviderRegionsTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list provider regions too many requests body
func (o *ListProviderRegionsTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list provider regions too many requests body based on context it is used
func (o *ListProviderRegionsTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProviderRegionsTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProviderRegionsTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res ListProviderRegionsTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
