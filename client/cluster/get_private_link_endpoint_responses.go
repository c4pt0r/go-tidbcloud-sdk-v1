// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPrivateLinkEndpointReader is a Reader for the GetPrivateLinkEndpoint structure.
type GetPrivateLinkEndpointReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrivateLinkEndpointReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPrivateLinkEndpointOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPrivateLinkEndpointBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPrivateLinkEndpointUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPrivateLinkEndpointForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPrivateLinkEndpointNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPrivateLinkEndpointTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPrivateLinkEndpointInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPrivateLinkEndpointDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPrivateLinkEndpointOK creates a GetPrivateLinkEndpointOK with default headers values
func NewGetPrivateLinkEndpointOK() *GetPrivateLinkEndpointOK {
	return &GetPrivateLinkEndpointOK{}
}

/*
GetPrivateLinkEndpointOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPrivateLinkEndpointOK struct {
	Payload *GetPrivateLinkEndpointOKBody
}

// IsSuccess returns true when this get private link endpoint o k response has a 2xx status code
func (o *GetPrivateLinkEndpointOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get private link endpoint o k response has a 3xx status code
func (o *GetPrivateLinkEndpointOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint o k response has a 4xx status code
func (o *GetPrivateLinkEndpointOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get private link endpoint o k response has a 5xx status code
func (o *GetPrivateLinkEndpointOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint o k response a status code equal to that given
func (o *GetPrivateLinkEndpointOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get private link endpoint o k response
func (o *GetPrivateLinkEndpointOK) Code() int {
	return 200
}

func (o *GetPrivateLinkEndpointOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointOK %s", 200, payload)
}

func (o *GetPrivateLinkEndpointOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointOK %s", 200, payload)
}

func (o *GetPrivateLinkEndpointOK) GetPayload() *GetPrivateLinkEndpointOKBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointBadRequest creates a GetPrivateLinkEndpointBadRequest with default headers values
func NewGetPrivateLinkEndpointBadRequest() *GetPrivateLinkEndpointBadRequest {
	return &GetPrivateLinkEndpointBadRequest{}
}

/*
GetPrivateLinkEndpointBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type GetPrivateLinkEndpointBadRequest struct {
	Payload *GetPrivateLinkEndpointBadRequestBody
}

// IsSuccess returns true when this get private link endpoint bad request response has a 2xx status code
func (o *GetPrivateLinkEndpointBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint bad request response has a 3xx status code
func (o *GetPrivateLinkEndpointBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint bad request response has a 4xx status code
func (o *GetPrivateLinkEndpointBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private link endpoint bad request response has a 5xx status code
func (o *GetPrivateLinkEndpointBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint bad request response a status code equal to that given
func (o *GetPrivateLinkEndpointBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get private link endpoint bad request response
func (o *GetPrivateLinkEndpointBadRequest) Code() int {
	return 400
}

func (o *GetPrivateLinkEndpointBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointBadRequest %s", 400, payload)
}

func (o *GetPrivateLinkEndpointBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointBadRequest %s", 400, payload)
}

func (o *GetPrivateLinkEndpointBadRequest) GetPayload() *GetPrivateLinkEndpointBadRequestBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointUnauthorized creates a GetPrivateLinkEndpointUnauthorized with default headers values
func NewGetPrivateLinkEndpointUnauthorized() *GetPrivateLinkEndpointUnauthorized {
	return &GetPrivateLinkEndpointUnauthorized{}
}

/*
GetPrivateLinkEndpointUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type GetPrivateLinkEndpointUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get private link endpoint unauthorized response has a 2xx status code
func (o *GetPrivateLinkEndpointUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint unauthorized response has a 3xx status code
func (o *GetPrivateLinkEndpointUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint unauthorized response has a 4xx status code
func (o *GetPrivateLinkEndpointUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private link endpoint unauthorized response has a 5xx status code
func (o *GetPrivateLinkEndpointUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint unauthorized response a status code equal to that given
func (o *GetPrivateLinkEndpointUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get private link endpoint unauthorized response
func (o *GetPrivateLinkEndpointUnauthorized) Code() int {
	return 401
}

func (o *GetPrivateLinkEndpointUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointUnauthorized %s", 401, payload)
}

func (o *GetPrivateLinkEndpointUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointUnauthorized %s", 401, payload)
}

func (o *GetPrivateLinkEndpointUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetPrivateLinkEndpointUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointForbidden creates a GetPrivateLinkEndpointForbidden with default headers values
func NewGetPrivateLinkEndpointForbidden() *GetPrivateLinkEndpointForbidden {
	return &GetPrivateLinkEndpointForbidden{}
}

/*
GetPrivateLinkEndpointForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type GetPrivateLinkEndpointForbidden struct {
	Payload *GetPrivateLinkEndpointForbiddenBody
}

// IsSuccess returns true when this get private link endpoint forbidden response has a 2xx status code
func (o *GetPrivateLinkEndpointForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint forbidden response has a 3xx status code
func (o *GetPrivateLinkEndpointForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint forbidden response has a 4xx status code
func (o *GetPrivateLinkEndpointForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private link endpoint forbidden response has a 5xx status code
func (o *GetPrivateLinkEndpointForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint forbidden response a status code equal to that given
func (o *GetPrivateLinkEndpointForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get private link endpoint forbidden response
func (o *GetPrivateLinkEndpointForbidden) Code() int {
	return 403
}

func (o *GetPrivateLinkEndpointForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointForbidden %s", 403, payload)
}

func (o *GetPrivateLinkEndpointForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointForbidden %s", 403, payload)
}

func (o *GetPrivateLinkEndpointForbidden) GetPayload() *GetPrivateLinkEndpointForbiddenBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointNotFound creates a GetPrivateLinkEndpointNotFound with default headers values
func NewGetPrivateLinkEndpointNotFound() *GetPrivateLinkEndpointNotFound {
	return &GetPrivateLinkEndpointNotFound{}
}

/*
GetPrivateLinkEndpointNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type GetPrivateLinkEndpointNotFound struct {
	Payload *GetPrivateLinkEndpointNotFoundBody
}

// IsSuccess returns true when this get private link endpoint not found response has a 2xx status code
func (o *GetPrivateLinkEndpointNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint not found response has a 3xx status code
func (o *GetPrivateLinkEndpointNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint not found response has a 4xx status code
func (o *GetPrivateLinkEndpointNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private link endpoint not found response has a 5xx status code
func (o *GetPrivateLinkEndpointNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint not found response a status code equal to that given
func (o *GetPrivateLinkEndpointNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get private link endpoint not found response
func (o *GetPrivateLinkEndpointNotFound) Code() int {
	return 404
}

func (o *GetPrivateLinkEndpointNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointNotFound %s", 404, payload)
}

func (o *GetPrivateLinkEndpointNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointNotFound %s", 404, payload)
}

func (o *GetPrivateLinkEndpointNotFound) GetPayload() *GetPrivateLinkEndpointNotFoundBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointTooManyRequests creates a GetPrivateLinkEndpointTooManyRequests with default headers values
func NewGetPrivateLinkEndpointTooManyRequests() *GetPrivateLinkEndpointTooManyRequests {
	return &GetPrivateLinkEndpointTooManyRequests{}
}

/*
GetPrivateLinkEndpointTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type GetPrivateLinkEndpointTooManyRequests struct {
	Payload *GetPrivateLinkEndpointTooManyRequestsBody
}

// IsSuccess returns true when this get private link endpoint too many requests response has a 2xx status code
func (o *GetPrivateLinkEndpointTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint too many requests response has a 3xx status code
func (o *GetPrivateLinkEndpointTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint too many requests response has a 4xx status code
func (o *GetPrivateLinkEndpointTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private link endpoint too many requests response has a 5xx status code
func (o *GetPrivateLinkEndpointTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get private link endpoint too many requests response a status code equal to that given
func (o *GetPrivateLinkEndpointTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get private link endpoint too many requests response
func (o *GetPrivateLinkEndpointTooManyRequests) Code() int {
	return 429
}

func (o *GetPrivateLinkEndpointTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointTooManyRequests %s", 429, payload)
}

func (o *GetPrivateLinkEndpointTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointTooManyRequests %s", 429, payload)
}

func (o *GetPrivateLinkEndpointTooManyRequests) GetPayload() *GetPrivateLinkEndpointTooManyRequestsBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointInternalServerError creates a GetPrivateLinkEndpointInternalServerError with default headers values
func NewGetPrivateLinkEndpointInternalServerError() *GetPrivateLinkEndpointInternalServerError {
	return &GetPrivateLinkEndpointInternalServerError{}
}

/*
GetPrivateLinkEndpointInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type GetPrivateLinkEndpointInternalServerError struct {
	Payload *GetPrivateLinkEndpointInternalServerErrorBody
}

// IsSuccess returns true when this get private link endpoint internal server error response has a 2xx status code
func (o *GetPrivateLinkEndpointInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private link endpoint internal server error response has a 3xx status code
func (o *GetPrivateLinkEndpointInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private link endpoint internal server error response has a 4xx status code
func (o *GetPrivateLinkEndpointInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get private link endpoint internal server error response has a 5xx status code
func (o *GetPrivateLinkEndpointInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get private link endpoint internal server error response a status code equal to that given
func (o *GetPrivateLinkEndpointInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get private link endpoint internal server error response
func (o *GetPrivateLinkEndpointInternalServerError) Code() int {
	return 500
}

func (o *GetPrivateLinkEndpointInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointInternalServerError %s", 500, payload)
}

func (o *GetPrivateLinkEndpointInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] getPrivateLinkEndpointInternalServerError %s", 500, payload)
}

func (o *GetPrivateLinkEndpointInternalServerError) GetPayload() *GetPrivateLinkEndpointInternalServerErrorBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateLinkEndpointDefault creates a GetPrivateLinkEndpointDefault with default headers values
func NewGetPrivateLinkEndpointDefault(code int) *GetPrivateLinkEndpointDefault {
	return &GetPrivateLinkEndpointDefault{
		_statusCode: code,
	}
}

/*
GetPrivateLinkEndpointDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPrivateLinkEndpointDefault struct {
	_statusCode int

	Payload *GetPrivateLinkEndpointDefaultBody
}

// IsSuccess returns true when this get private link endpoint default response has a 2xx status code
func (o *GetPrivateLinkEndpointDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get private link endpoint default response has a 3xx status code
func (o *GetPrivateLinkEndpointDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get private link endpoint default response has a 4xx status code
func (o *GetPrivateLinkEndpointDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get private link endpoint default response has a 5xx status code
func (o *GetPrivateLinkEndpointDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get private link endpoint default response a status code equal to that given
func (o *GetPrivateLinkEndpointDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get private link endpoint default response
func (o *GetPrivateLinkEndpointDefault) Code() int {
	return o._statusCode
}

func (o *GetPrivateLinkEndpointDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] GetPrivateLinkEndpoint default %s", o._statusCode, payload)
}

func (o *GetPrivateLinkEndpointDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/accesspoints/{accesspoint_id}/privateLinkEndpoints/{private_link_endpoint_id}][%d] GetPrivateLinkEndpoint default %s", o._statusCode, payload)
}

func (o *GetPrivateLinkEndpointDefault) GetPayload() *GetPrivateLinkEndpointDefaultBody {
	return o.Payload
}

func (o *GetPrivateLinkEndpointDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateLinkEndpointDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPrivateLinkEndpointBadRequestBody get private link endpoint bad request body
swagger:model GetPrivateLinkEndpointBadRequestBody
*/
type GetPrivateLinkEndpointBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint bad request body
func (o *GetPrivateLinkEndpointBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint bad request body based on context it is used
func (o *GetPrivateLinkEndpointBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointDefaultBody get private link endpoint default body
swagger:model GetPrivateLinkEndpointDefaultBody
*/
type GetPrivateLinkEndpointDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*GetPrivateLinkEndpointDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint default body
func (o *GetPrivateLinkEndpointDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateLinkEndpointDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPrivateLinkEndpoint default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPrivateLinkEndpoint default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get private link endpoint default body based on the context it is used
func (o *GetPrivateLinkEndpointDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateLinkEndpointDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPrivateLinkEndpoint default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPrivateLinkEndpoint default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointDefaultBodyDetailsItems0 get private link endpoint default body details items0
swagger:model GetPrivateLinkEndpointDefaultBodyDetailsItems0
*/
type GetPrivateLinkEndpointDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`

	// get private link endpoint default body details items0
	GetPrivateLinkEndpointDefaultBodyDetailsItems0 map[string]interface{} `json:"-"`
}

// UnmarshalJSON unmarshals this object with additional properties from JSON
func (o *GetPrivateLinkEndpointDefaultBodyDetailsItems0) UnmarshalJSON(data []byte) error {
	// stage 1, bind the properties
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}
	if err := json.Unmarshal(data, &stage1); err != nil {
		return err
	}
	var rcv GetPrivateLinkEndpointDefaultBodyDetailsItems0

	rcv.AtType = stage1.AtType
	*o = rcv

	// stage 2, remove properties and add to map
	stage2 := make(map[string]json.RawMessage)
	if err := json.Unmarshal(data, &stage2); err != nil {
		return err
	}

	delete(stage2, "@type")
	// stage 3, add additional properties values
	if len(stage2) > 0 {
		result := make(map[string]interface{})
		for k, v := range stage2 {
			var toadd interface{}
			if err := json.Unmarshal(v, &toadd); err != nil {
				return err
			}
			result[k] = toadd
		}
		o.GetPrivateLinkEndpointDefaultBodyDetailsItems0 = result
	}

	return nil
}

// MarshalJSON marshals this object with additional properties into a JSON object
func (o GetPrivateLinkEndpointDefaultBodyDetailsItems0) MarshalJSON() ([]byte, error) {
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}

	stage1.AtType = o.AtType

	// make JSON object for known properties
	props, err := json.Marshal(stage1)
	if err != nil {
		return nil, err
	}

	if len(o.GetPrivateLinkEndpointDefaultBodyDetailsItems0) == 0 { // no additional properties
		return props, nil
	}

	// make JSON object for the additional properties
	additional, err := json.Marshal(o.GetPrivateLinkEndpointDefaultBodyDetailsItems0)
	if err != nil {
		return nil, err
	}

	if len(props) < 3 { // "{}": only additional properties
		return additional, nil
	}

	// concatenate the 2 objects
	return swag.ConcatJSON(props, additional), nil
}

// Validate validates this get private link endpoint default body details items0
func (o *GetPrivateLinkEndpointDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint default body details items0 based on context it is used
func (o *GetPrivateLinkEndpointDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointForbiddenBody get private link endpoint forbidden body
swagger:model GetPrivateLinkEndpointForbiddenBody
*/
type GetPrivateLinkEndpointForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint forbidden body
func (o *GetPrivateLinkEndpointForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint forbidden body based on context it is used
func (o *GetPrivateLinkEndpointForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointInternalServerErrorBody get private link endpoint internal server error body
swagger:model GetPrivateLinkEndpointInternalServerErrorBody
*/
type GetPrivateLinkEndpointInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint internal server error body
func (o *GetPrivateLinkEndpointInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint internal server error body based on context it is used
func (o *GetPrivateLinkEndpointInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointNotFoundBody get private link endpoint not found body
swagger:model GetPrivateLinkEndpointNotFoundBody
*/
type GetPrivateLinkEndpointNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint not found body
func (o *GetPrivateLinkEndpointNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint not found body based on context it is used
func (o *GetPrivateLinkEndpointNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointOKBody PrivateLinkEndpoint
//
// PrivateLinkEndpoint
swagger:model GetPrivateLinkEndpointOKBody
*/
type GetPrivateLinkEndpointOKBody struct {

	// The format of the private endpoint name varies by cloud provider: `"vpce-xxxx"` for AWS and `"projects/xxx/regions/xxx/forwardingRules/xxx"` for Google Cloud.
	// Example: vpce-01234567890123456
	// Required: true
	EndpointName *string `json:"endpoint_name"`

	// The ID of the private link endpoint.
	// Example: 1
	// Required: true
	ID *string `json:"id"`

	// [Output Only] The detailed message when the `status` is "FAILED".
	// Example: The endpoint does not exist.
	Message string `json:"message,omitempty"`

	// [Output Only] The status of the private endpoint.
	// Example: ACTIVE
	// Required: true
	// Enum: ["PENDING","ACTIVE","DELETING","FAILED"]
	Status *string `json:"status"`
}

// Validate validates this get private link endpoint o k body
func (o *GetPrivateLinkEndpointOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndpointName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateLinkEndpointOKBody) validateEndpointName(formats strfmt.Registry) error {

	if err := validate.Required("getPrivateLinkEndpointOK"+"."+"endpoint_name", "body", o.EndpointName); err != nil {
		return err
	}

	return nil
}

func (o *GetPrivateLinkEndpointOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("getPrivateLinkEndpointOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

var getPrivateLinkEndpointOKBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PENDING","ACTIVE","DELETING","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getPrivateLinkEndpointOKBodyTypeStatusPropEnum = append(getPrivateLinkEndpointOKBodyTypeStatusPropEnum, v)
	}
}

const (

	// GetPrivateLinkEndpointOKBodyStatusPENDING captures enum value "PENDING"
	GetPrivateLinkEndpointOKBodyStatusPENDING string = "PENDING"

	// GetPrivateLinkEndpointOKBodyStatusACTIVE captures enum value "ACTIVE"
	GetPrivateLinkEndpointOKBodyStatusACTIVE string = "ACTIVE"

	// GetPrivateLinkEndpointOKBodyStatusDELETING captures enum value "DELETING"
	GetPrivateLinkEndpointOKBodyStatusDELETING string = "DELETING"

	// GetPrivateLinkEndpointOKBodyStatusFAILED captures enum value "FAILED"
	GetPrivateLinkEndpointOKBodyStatusFAILED string = "FAILED"
)

// prop value enum
func (o *GetPrivateLinkEndpointOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getPrivateLinkEndpointOKBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetPrivateLinkEndpointOKBody) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("getPrivateLinkEndpointOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	// value enum
	if err := o.validateStatusEnum("getPrivateLinkEndpointOK"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get private link endpoint o k body based on context it is used
func (o *GetPrivateLinkEndpointOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointOKBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateLinkEndpointTooManyRequestsBody get private link endpoint too many requests body
swagger:model GetPrivateLinkEndpointTooManyRequestsBody
*/
type GetPrivateLinkEndpointTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private link endpoint too many requests body
func (o *GetPrivateLinkEndpointTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private link endpoint too many requests body based on context it is used
func (o *GetPrivateLinkEndpointTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateLinkEndpointTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateLinkEndpointTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateLinkEndpointTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
