// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateAwsCmekReader is a Reader for the CreateAwsCmek structure.
type CreateAwsCmekReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAwsCmekReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAwsCmekOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAwsCmekBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAwsCmekUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAwsCmekForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAwsCmekNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateAwsCmekTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAwsCmekInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateAwsCmekDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateAwsCmekOK creates a CreateAwsCmekOK with default headers values
func NewCreateAwsCmekOK() *CreateAwsCmekOK {
	return &CreateAwsCmekOK{}
}

/*
CreateAwsCmekOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateAwsCmekOK struct {
	Payload interface{}
}

// IsSuccess returns true when this create aws cmek o k response has a 2xx status code
func (o *CreateAwsCmekOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create aws cmek o k response has a 3xx status code
func (o *CreateAwsCmekOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek o k response has a 4xx status code
func (o *CreateAwsCmekOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create aws cmek o k response has a 5xx status code
func (o *CreateAwsCmekOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek o k response a status code equal to that given
func (o *CreateAwsCmekOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateAwsCmekOK) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekOK  %+v", 200, o.Payload)
}

func (o *CreateAwsCmekOK) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekOK  %+v", 200, o.Payload)
}

func (o *CreateAwsCmekOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateAwsCmekOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekBadRequest creates a CreateAwsCmekBadRequest with default headers values
func NewCreateAwsCmekBadRequest() *CreateAwsCmekBadRequest {
	return &CreateAwsCmekBadRequest{}
}

/*
CreateAwsCmekBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type CreateAwsCmekBadRequest struct {
	Payload *CreateAwsCmekBadRequestBody
}

// IsSuccess returns true when this create aws cmek bad request response has a 2xx status code
func (o *CreateAwsCmekBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek bad request response has a 3xx status code
func (o *CreateAwsCmekBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek bad request response has a 4xx status code
func (o *CreateAwsCmekBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create aws cmek bad request response has a 5xx status code
func (o *CreateAwsCmekBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek bad request response a status code equal to that given
func (o *CreateAwsCmekBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateAwsCmekBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAwsCmekBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAwsCmekBadRequest) GetPayload() *CreateAwsCmekBadRequestBody {
	return o.Payload
}

func (o *CreateAwsCmekBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekUnauthorized creates a CreateAwsCmekUnauthorized with default headers values
func NewCreateAwsCmekUnauthorized() *CreateAwsCmekUnauthorized {
	return &CreateAwsCmekUnauthorized{}
}

/*
CreateAwsCmekUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type CreateAwsCmekUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this create aws cmek unauthorized response has a 2xx status code
func (o *CreateAwsCmekUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek unauthorized response has a 3xx status code
func (o *CreateAwsCmekUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek unauthorized response has a 4xx status code
func (o *CreateAwsCmekUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create aws cmek unauthorized response has a 5xx status code
func (o *CreateAwsCmekUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek unauthorized response a status code equal to that given
func (o *CreateAwsCmekUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateAwsCmekUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAwsCmekUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAwsCmekUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateAwsCmekUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekForbidden creates a CreateAwsCmekForbidden with default headers values
func NewCreateAwsCmekForbidden() *CreateAwsCmekForbidden {
	return &CreateAwsCmekForbidden{}
}

/*
CreateAwsCmekForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type CreateAwsCmekForbidden struct {
	Payload *CreateAwsCmekForbiddenBody
}

// IsSuccess returns true when this create aws cmek forbidden response has a 2xx status code
func (o *CreateAwsCmekForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek forbidden response has a 3xx status code
func (o *CreateAwsCmekForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek forbidden response has a 4xx status code
func (o *CreateAwsCmekForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create aws cmek forbidden response has a 5xx status code
func (o *CreateAwsCmekForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek forbidden response a status code equal to that given
func (o *CreateAwsCmekForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateAwsCmekForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekForbidden  %+v", 403, o.Payload)
}

func (o *CreateAwsCmekForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekForbidden  %+v", 403, o.Payload)
}

func (o *CreateAwsCmekForbidden) GetPayload() *CreateAwsCmekForbiddenBody {
	return o.Payload
}

func (o *CreateAwsCmekForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekNotFound creates a CreateAwsCmekNotFound with default headers values
func NewCreateAwsCmekNotFound() *CreateAwsCmekNotFound {
	return &CreateAwsCmekNotFound{}
}

/*
CreateAwsCmekNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type CreateAwsCmekNotFound struct {
	Payload *CreateAwsCmekNotFoundBody
}

// IsSuccess returns true when this create aws cmek not found response has a 2xx status code
func (o *CreateAwsCmekNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek not found response has a 3xx status code
func (o *CreateAwsCmekNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek not found response has a 4xx status code
func (o *CreateAwsCmekNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create aws cmek not found response has a 5xx status code
func (o *CreateAwsCmekNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek not found response a status code equal to that given
func (o *CreateAwsCmekNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateAwsCmekNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekNotFound  %+v", 404, o.Payload)
}

func (o *CreateAwsCmekNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekNotFound  %+v", 404, o.Payload)
}

func (o *CreateAwsCmekNotFound) GetPayload() *CreateAwsCmekNotFoundBody {
	return o.Payload
}

func (o *CreateAwsCmekNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekTooManyRequests creates a CreateAwsCmekTooManyRequests with default headers values
func NewCreateAwsCmekTooManyRequests() *CreateAwsCmekTooManyRequests {
	return &CreateAwsCmekTooManyRequests{}
}

/*
CreateAwsCmekTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type CreateAwsCmekTooManyRequests struct {
	Payload *CreateAwsCmekTooManyRequestsBody
}

// IsSuccess returns true when this create aws cmek too many requests response has a 2xx status code
func (o *CreateAwsCmekTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek too many requests response has a 3xx status code
func (o *CreateAwsCmekTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek too many requests response has a 4xx status code
func (o *CreateAwsCmekTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create aws cmek too many requests response has a 5xx status code
func (o *CreateAwsCmekTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws cmek too many requests response a status code equal to that given
func (o *CreateAwsCmekTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *CreateAwsCmekTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateAwsCmekTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateAwsCmekTooManyRequests) GetPayload() *CreateAwsCmekTooManyRequestsBody {
	return o.Payload
}

func (o *CreateAwsCmekTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekInternalServerError creates a CreateAwsCmekInternalServerError with default headers values
func NewCreateAwsCmekInternalServerError() *CreateAwsCmekInternalServerError {
	return &CreateAwsCmekInternalServerError{}
}

/*
CreateAwsCmekInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type CreateAwsCmekInternalServerError struct {
	Payload *CreateAwsCmekInternalServerErrorBody
}

// IsSuccess returns true when this create aws cmek internal server error response has a 2xx status code
func (o *CreateAwsCmekInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create aws cmek internal server error response has a 3xx status code
func (o *CreateAwsCmekInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws cmek internal server error response has a 4xx status code
func (o *CreateAwsCmekInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create aws cmek internal server error response has a 5xx status code
func (o *CreateAwsCmekInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create aws cmek internal server error response a status code equal to that given
func (o *CreateAwsCmekInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateAwsCmekInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAwsCmekInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] createAwsCmekInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAwsCmekInternalServerError) GetPayload() *CreateAwsCmekInternalServerErrorBody {
	return o.Payload
}

func (o *CreateAwsCmekInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsCmekDefault creates a CreateAwsCmekDefault with default headers values
func NewCreateAwsCmekDefault(code int) *CreateAwsCmekDefault {
	return &CreateAwsCmekDefault{
		_statusCode: code,
	}
}

/*
CreateAwsCmekDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateAwsCmekDefault struct {
	_statusCode int

	Payload *CreateAwsCmekDefaultBody
}

// Code gets the status code for the create aws cmek default response
func (o *CreateAwsCmekDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create aws cmek default response has a 2xx status code
func (o *CreateAwsCmekDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create aws cmek default response has a 3xx status code
func (o *CreateAwsCmekDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create aws cmek default response has a 4xx status code
func (o *CreateAwsCmekDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create aws cmek default response has a 5xx status code
func (o *CreateAwsCmekDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create aws cmek default response a status code equal to that given
func (o *CreateAwsCmekDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateAwsCmekDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] CreateAwsCmek default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAwsCmekDefault) String() string {
	return fmt.Sprintf("[POST /api/v1beta/projects/{project_id}/aws-cmek][%d] CreateAwsCmek default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAwsCmekDefault) GetPayload() *CreateAwsCmekDefaultBody {
	return o.Payload
}

func (o *CreateAwsCmekDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAwsCmekDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateAwsCmekBadRequestBody create aws cmek bad request body
swagger:model CreateAwsCmekBadRequestBody
*/
type CreateAwsCmekBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek bad request body
func (o *CreateAwsCmekBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek bad request body based on context it is used
func (o *CreateAwsCmekBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekBody CreateAwsCmekReq
//
// CreateAwsCmekReq is the request for configuring AWS Customer-Managed Encryption Keys for a project.
swagger:model CreateAwsCmekBody
*/
type CreateAwsCmekBody struct {

	// The specification of the AWS CMEK. You can configure multiple AWS CMEKs.
	//
	// For a particular project, CMEK can only be configured for one AWS region. Once configured, you cannot create clusters in other regions in the same project.
	// Required: true
	Specs []*CreateAwsCmekParamsBodySpecsItems0 `json:"specs"`
}

// Validate validates this create aws cmek body
func (o *CreateAwsCmekBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSpecs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsCmekBody) validateSpecs(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"specs", "body", o.Specs); err != nil {
		return err
	}

	for i := 0; i < len(o.Specs); i++ {
		if swag.IsZero(o.Specs[i]) { // not required
			continue
		}

		if o.Specs[i] != nil {
			if err := o.Specs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "specs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "specs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create aws cmek body based on the context it is used
func (o *CreateAwsCmekBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSpecs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsCmekBody) contextValidateSpecs(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Specs); i++ {

		if o.Specs[i] != nil {
			if err := o.Specs[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "specs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "specs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekDefaultBody create aws cmek default body
swagger:model CreateAwsCmekDefaultBody
*/
type CreateAwsCmekDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*CreateAwsCmekDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek default body
func (o *CreateAwsCmekDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsCmekDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CreateAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CreateAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create aws cmek default body based on the context it is used
func (o *CreateAwsCmekDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsCmekDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CreateAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CreateAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekDefaultBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekDefaultBodyDetailsItems0 create aws cmek default body details items0
swagger:model CreateAwsCmekDefaultBodyDetailsItems0
*/
type CreateAwsCmekDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this create aws cmek default body details items0
func (o *CreateAwsCmekDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek default body details items0 based on context it is used
func (o *CreateAwsCmekDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekForbiddenBody create aws cmek forbidden body
swagger:model CreateAwsCmekForbiddenBody
*/
type CreateAwsCmekForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek forbidden body
func (o *CreateAwsCmekForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek forbidden body based on context it is used
func (o *CreateAwsCmekForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekInternalServerErrorBody create aws cmek internal server error body
swagger:model CreateAwsCmekInternalServerErrorBody
*/
type CreateAwsCmekInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek internal server error body
func (o *CreateAwsCmekInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek internal server error body based on context it is used
func (o *CreateAwsCmekInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekNotFoundBody create aws cmek not found body
swagger:model CreateAwsCmekNotFoundBody
*/
type CreateAwsCmekNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek not found body
func (o *CreateAwsCmekNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek not found body based on context it is used
func (o *CreateAwsCmekNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekParamsBodySpecsItems0 AwsCmekSpec
//
// AwsCmekSpec is the specification of the AWS CMEK.
swagger:model CreateAwsCmekParamsBodySpecsItems0
*/
type CreateAwsCmekParamsBodySpecsItems0 struct {

	// The KMS ARN of the AWS CMEK.
	// Example: arn:aws:kms:example
	// Required: true
	KmsArn *string `json:"kms_arn"`

	// The region name of the AWS CMEK. The region value should match the cloud provider's region code.
	//
	// You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
	// Example: us-west-2
	// Required: true
	Region *string `json:"region"`
}

// Validate validates this create aws cmek params body specs items0
func (o *CreateAwsCmekParamsBodySpecsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKmsArn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsCmekParamsBodySpecsItems0) validateKmsArn(formats strfmt.Registry) error {

	if err := validate.Required("kms_arn", "body", o.KmsArn); err != nil {
		return err
	}

	return nil
}

func (o *CreateAwsCmekParamsBodySpecsItems0) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", o.Region); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create aws cmek params body specs items0 based on context it is used
func (o *CreateAwsCmekParamsBodySpecsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekParamsBodySpecsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekParamsBodySpecsItems0) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekParamsBodySpecsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAwsCmekTooManyRequestsBody create aws cmek too many requests body
swagger:model CreateAwsCmekTooManyRequestsBody
*/
type CreateAwsCmekTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this create aws cmek too many requests body
func (o *CreateAwsCmekTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create aws cmek too many requests body based on context it is used
func (o *CreateAwsCmekTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsCmekTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsCmekTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsCmekTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
