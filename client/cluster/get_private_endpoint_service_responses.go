// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPrivateEndpointServiceReader is a Reader for the GetPrivateEndpointService structure.
type GetPrivateEndpointServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrivateEndpointServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPrivateEndpointServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPrivateEndpointServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPrivateEndpointServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPrivateEndpointServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPrivateEndpointServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPrivateEndpointServiceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPrivateEndpointServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPrivateEndpointServiceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPrivateEndpointServiceOK creates a GetPrivateEndpointServiceOK with default headers values
func NewGetPrivateEndpointServiceOK() *GetPrivateEndpointServiceOK {
	return &GetPrivateEndpointServiceOK{}
}

/*
GetPrivateEndpointServiceOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPrivateEndpointServiceOK struct {
	Payload *GetPrivateEndpointServiceOKBody
}

// IsSuccess returns true when this get private endpoint service o k response has a 2xx status code
func (o *GetPrivateEndpointServiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get private endpoint service o k response has a 3xx status code
func (o *GetPrivateEndpointServiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service o k response has a 4xx status code
func (o *GetPrivateEndpointServiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get private endpoint service o k response has a 5xx status code
func (o *GetPrivateEndpointServiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service o k response a status code equal to that given
func (o *GetPrivateEndpointServiceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get private endpoint service o k response
func (o *GetPrivateEndpointServiceOK) Code() int {
	return 200
}

func (o *GetPrivateEndpointServiceOK) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceOK  %+v", 200, o.Payload)
}

func (o *GetPrivateEndpointServiceOK) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceOK  %+v", 200, o.Payload)
}

func (o *GetPrivateEndpointServiceOK) GetPayload() *GetPrivateEndpointServiceOKBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceBadRequest creates a GetPrivateEndpointServiceBadRequest with default headers values
func NewGetPrivateEndpointServiceBadRequest() *GetPrivateEndpointServiceBadRequest {
	return &GetPrivateEndpointServiceBadRequest{}
}

/*
GetPrivateEndpointServiceBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type GetPrivateEndpointServiceBadRequest struct {
	Payload *GetPrivateEndpointServiceBadRequestBody
}

// IsSuccess returns true when this get private endpoint service bad request response has a 2xx status code
func (o *GetPrivateEndpointServiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service bad request response has a 3xx status code
func (o *GetPrivateEndpointServiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service bad request response has a 4xx status code
func (o *GetPrivateEndpointServiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private endpoint service bad request response has a 5xx status code
func (o *GetPrivateEndpointServiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service bad request response a status code equal to that given
func (o *GetPrivateEndpointServiceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get private endpoint service bad request response
func (o *GetPrivateEndpointServiceBadRequest) Code() int {
	return 400
}

func (o *GetPrivateEndpointServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceBadRequest  %+v", 400, o.Payload)
}

func (o *GetPrivateEndpointServiceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceBadRequest  %+v", 400, o.Payload)
}

func (o *GetPrivateEndpointServiceBadRequest) GetPayload() *GetPrivateEndpointServiceBadRequestBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceUnauthorized creates a GetPrivateEndpointServiceUnauthorized with default headers values
func NewGetPrivateEndpointServiceUnauthorized() *GetPrivateEndpointServiceUnauthorized {
	return &GetPrivateEndpointServiceUnauthorized{}
}

/*
GetPrivateEndpointServiceUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type GetPrivateEndpointServiceUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get private endpoint service unauthorized response has a 2xx status code
func (o *GetPrivateEndpointServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service unauthorized response has a 3xx status code
func (o *GetPrivateEndpointServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service unauthorized response has a 4xx status code
func (o *GetPrivateEndpointServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private endpoint service unauthorized response has a 5xx status code
func (o *GetPrivateEndpointServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service unauthorized response a status code equal to that given
func (o *GetPrivateEndpointServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get private endpoint service unauthorized response
func (o *GetPrivateEndpointServiceUnauthorized) Code() int {
	return 401
}

func (o *GetPrivateEndpointServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPrivateEndpointServiceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPrivateEndpointServiceUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetPrivateEndpointServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceForbidden creates a GetPrivateEndpointServiceForbidden with default headers values
func NewGetPrivateEndpointServiceForbidden() *GetPrivateEndpointServiceForbidden {
	return &GetPrivateEndpointServiceForbidden{}
}

/*
GetPrivateEndpointServiceForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type GetPrivateEndpointServiceForbidden struct {
	Payload *GetPrivateEndpointServiceForbiddenBody
}

// IsSuccess returns true when this get private endpoint service forbidden response has a 2xx status code
func (o *GetPrivateEndpointServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service forbidden response has a 3xx status code
func (o *GetPrivateEndpointServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service forbidden response has a 4xx status code
func (o *GetPrivateEndpointServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private endpoint service forbidden response has a 5xx status code
func (o *GetPrivateEndpointServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service forbidden response a status code equal to that given
func (o *GetPrivateEndpointServiceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get private endpoint service forbidden response
func (o *GetPrivateEndpointServiceForbidden) Code() int {
	return 403
}

func (o *GetPrivateEndpointServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceForbidden  %+v", 403, o.Payload)
}

func (o *GetPrivateEndpointServiceForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceForbidden  %+v", 403, o.Payload)
}

func (o *GetPrivateEndpointServiceForbidden) GetPayload() *GetPrivateEndpointServiceForbiddenBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceNotFound creates a GetPrivateEndpointServiceNotFound with default headers values
func NewGetPrivateEndpointServiceNotFound() *GetPrivateEndpointServiceNotFound {
	return &GetPrivateEndpointServiceNotFound{}
}

/*
GetPrivateEndpointServiceNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type GetPrivateEndpointServiceNotFound struct {
	Payload *GetPrivateEndpointServiceNotFoundBody
}

// IsSuccess returns true when this get private endpoint service not found response has a 2xx status code
func (o *GetPrivateEndpointServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service not found response has a 3xx status code
func (o *GetPrivateEndpointServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service not found response has a 4xx status code
func (o *GetPrivateEndpointServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private endpoint service not found response has a 5xx status code
func (o *GetPrivateEndpointServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service not found response a status code equal to that given
func (o *GetPrivateEndpointServiceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get private endpoint service not found response
func (o *GetPrivateEndpointServiceNotFound) Code() int {
	return 404
}

func (o *GetPrivateEndpointServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceNotFound  %+v", 404, o.Payload)
}

func (o *GetPrivateEndpointServiceNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceNotFound  %+v", 404, o.Payload)
}

func (o *GetPrivateEndpointServiceNotFound) GetPayload() *GetPrivateEndpointServiceNotFoundBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceTooManyRequests creates a GetPrivateEndpointServiceTooManyRequests with default headers values
func NewGetPrivateEndpointServiceTooManyRequests() *GetPrivateEndpointServiceTooManyRequests {
	return &GetPrivateEndpointServiceTooManyRequests{}
}

/*
GetPrivateEndpointServiceTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type GetPrivateEndpointServiceTooManyRequests struct {
	Payload *GetPrivateEndpointServiceTooManyRequestsBody
}

// IsSuccess returns true when this get private endpoint service too many requests response has a 2xx status code
func (o *GetPrivateEndpointServiceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service too many requests response has a 3xx status code
func (o *GetPrivateEndpointServiceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service too many requests response has a 4xx status code
func (o *GetPrivateEndpointServiceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get private endpoint service too many requests response has a 5xx status code
func (o *GetPrivateEndpointServiceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get private endpoint service too many requests response a status code equal to that given
func (o *GetPrivateEndpointServiceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get private endpoint service too many requests response
func (o *GetPrivateEndpointServiceTooManyRequests) Code() int {
	return 429
}

func (o *GetPrivateEndpointServiceTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPrivateEndpointServiceTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPrivateEndpointServiceTooManyRequests) GetPayload() *GetPrivateEndpointServiceTooManyRequestsBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceInternalServerError creates a GetPrivateEndpointServiceInternalServerError with default headers values
func NewGetPrivateEndpointServiceInternalServerError() *GetPrivateEndpointServiceInternalServerError {
	return &GetPrivateEndpointServiceInternalServerError{}
}

/*
GetPrivateEndpointServiceInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type GetPrivateEndpointServiceInternalServerError struct {
	Payload *GetPrivateEndpointServiceInternalServerErrorBody
}

// IsSuccess returns true when this get private endpoint service internal server error response has a 2xx status code
func (o *GetPrivateEndpointServiceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get private endpoint service internal server error response has a 3xx status code
func (o *GetPrivateEndpointServiceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get private endpoint service internal server error response has a 4xx status code
func (o *GetPrivateEndpointServiceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get private endpoint service internal server error response has a 5xx status code
func (o *GetPrivateEndpointServiceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get private endpoint service internal server error response a status code equal to that given
func (o *GetPrivateEndpointServiceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get private endpoint service internal server error response
func (o *GetPrivateEndpointServiceInternalServerError) Code() int {
	return 500
}

func (o *GetPrivateEndpointServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPrivateEndpointServiceInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] getPrivateEndpointServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPrivateEndpointServiceInternalServerError) GetPayload() *GetPrivateEndpointServiceInternalServerErrorBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivateEndpointServiceDefault creates a GetPrivateEndpointServiceDefault with default headers values
func NewGetPrivateEndpointServiceDefault(code int) *GetPrivateEndpointServiceDefault {
	return &GetPrivateEndpointServiceDefault{
		_statusCode: code,
	}
}

/*
GetPrivateEndpointServiceDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPrivateEndpointServiceDefault struct {
	_statusCode int

	Payload *GetPrivateEndpointServiceDefaultBody
}

// IsSuccess returns true when this get private endpoint service default response has a 2xx status code
func (o *GetPrivateEndpointServiceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get private endpoint service default response has a 3xx status code
func (o *GetPrivateEndpointServiceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get private endpoint service default response has a 4xx status code
func (o *GetPrivateEndpointServiceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get private endpoint service default response has a 5xx status code
func (o *GetPrivateEndpointServiceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get private endpoint service default response a status code equal to that given
func (o *GetPrivateEndpointServiceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get private endpoint service default response
func (o *GetPrivateEndpointServiceDefault) Code() int {
	return o._statusCode
}

func (o *GetPrivateEndpointServiceDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] GetPrivateEndpointService default  %+v", o._statusCode, o.Payload)
}

func (o *GetPrivateEndpointServiceDefault) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service][%d] GetPrivateEndpointService default  %+v", o._statusCode, o.Payload)
}

func (o *GetPrivateEndpointServiceDefault) GetPayload() *GetPrivateEndpointServiceDefaultBody {
	return o.Payload
}

func (o *GetPrivateEndpointServiceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPrivateEndpointServiceDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPrivateEndpointServiceBadRequestBody get private endpoint service bad request body
swagger:model GetPrivateEndpointServiceBadRequestBody
*/
type GetPrivateEndpointServiceBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service bad request body
func (o *GetPrivateEndpointServiceBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service bad request body based on context it is used
func (o *GetPrivateEndpointServiceBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceDefaultBody get private endpoint service default body
swagger:model GetPrivateEndpointServiceDefaultBody
*/
type GetPrivateEndpointServiceDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*GetPrivateEndpointServiceDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service default body
func (o *GetPrivateEndpointServiceDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateEndpointServiceDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPrivateEndpointService default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPrivateEndpointService default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get private endpoint service default body based on the context it is used
func (o *GetPrivateEndpointServiceDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateEndpointServiceDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPrivateEndpointService default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPrivateEndpointService default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceDefaultBodyDetailsItems0 get private endpoint service default body details items0
swagger:model GetPrivateEndpointServiceDefaultBodyDetailsItems0
*/
type GetPrivateEndpointServiceDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get private endpoint service default body details items0
func (o *GetPrivateEndpointServiceDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service default body details items0 based on context it is used
func (o *GetPrivateEndpointServiceDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceForbiddenBody get private endpoint service forbidden body
swagger:model GetPrivateEndpointServiceForbiddenBody
*/
type GetPrivateEndpointServiceForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service forbidden body
func (o *GetPrivateEndpointServiceForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service forbidden body based on context it is used
func (o *GetPrivateEndpointServiceForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceInternalServerErrorBody get private endpoint service internal server error body
swagger:model GetPrivateEndpointServiceInternalServerErrorBody
*/
type GetPrivateEndpointServiceInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service internal server error body
func (o *GetPrivateEndpointServiceInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service internal server error body based on context it is used
func (o *GetPrivateEndpointServiceInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceNotFoundBody get private endpoint service not found body
swagger:model GetPrivateEndpointServiceNotFoundBody
*/
type GetPrivateEndpointServiceNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service not found body
func (o *GetPrivateEndpointServiceNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service not found body based on context it is used
func (o *GetPrivateEndpointServiceNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceOKBody GetPrivateEndpointServiceResp
//
// GetPrivateEndpointServiceResp is the response for getting private endpoint service for a cluster.
swagger:model GetPrivateEndpointServiceOKBody
*/
type GetPrivateEndpointServiceOKBody struct {

	// private endpoint service
	// Required: true
	PrivateEndpointService *GetPrivateEndpointServiceOKBodyPrivateEndpointService `json:"private_endpoint_service"`
}

// Validate validates this get private endpoint service o k body
func (o *GetPrivateEndpointServiceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePrivateEndpointService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateEndpointServiceOKBody) validatePrivateEndpointService(formats strfmt.Registry) error {

	if err := validate.Required("getPrivateEndpointServiceOK"+"."+"private_endpoint_service", "body", o.PrivateEndpointService); err != nil {
		return err
	}

	if o.PrivateEndpointService != nil {
		if err := o.PrivateEndpointService.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPrivateEndpointServiceOK" + "." + "private_endpoint_service")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPrivateEndpointServiceOK" + "." + "private_endpoint_service")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get private endpoint service o k body based on the context it is used
func (o *GetPrivateEndpointServiceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePrivateEndpointService(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPrivateEndpointServiceOKBody) contextValidatePrivateEndpointService(ctx context.Context, formats strfmt.Registry) error {

	if o.PrivateEndpointService != nil {

		if err := o.PrivateEndpointService.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPrivateEndpointServiceOK" + "." + "private_endpoint_service")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPrivateEndpointServiceOK" + "." + "private_endpoint_service")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceOKBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceOKBodyPrivateEndpointService The private endpoint service resource of the cluster.
swagger:model GetPrivateEndpointServiceOKBodyPrivateEndpointService
*/
type GetPrivateEndpointServiceOKBodyPrivateEndpointService struct {

	// Availability zones for the private endpoint service. This field is only applicable when the `cloud_provider` is `"AWS"`.
	// Example: ["usw2-az2","usw2-az1"]
	AzIds []string `json:"az_ids"`

	// The cloud provider on which the private endpoint service is hosted.
	// - `"AWS"`: the Amazon Web Services cloud provider
	// - `"GCP"`: the Google Cloud cloud provider
	// Example: AWS
	// Enum: [AWS GCP]
	CloudProvider string `json:"cloud_provider,omitempty"`

	// The DNS name of the private endpoint service.
	// Example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
	DNSName string `json:"dns_name,omitempty"`

	// The name of the private endpoint service, which is used for connection.
	// Example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
	Name string `json:"name,omitempty"`

	// The port of the private endpoint service.
	// Example: 4000
	Port int32 `json:"port,omitempty"`

	// The status of the private endpoint service.
	// Example: ACTIVE
	// Enum: [CREATING ACTIVE DELETING]
	Status string `json:"status,omitempty"`
}

// Validate validates this get private endpoint service o k body private endpoint service
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCloudProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeCloudProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AWS","GCP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeCloudProviderPropEnum = append(getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeCloudProviderPropEnum, v)
	}
}

const (

	// GetPrivateEndpointServiceOKBodyPrivateEndpointServiceCloudProviderAWS captures enum value "AWS"
	GetPrivateEndpointServiceOKBodyPrivateEndpointServiceCloudProviderAWS string = "AWS"

	// GetPrivateEndpointServiceOKBodyPrivateEndpointServiceCloudProviderGCP captures enum value "GCP"
	GetPrivateEndpointServiceOKBodyPrivateEndpointServiceCloudProviderGCP string = "GCP"
)

// prop value enum
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) validateCloudProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeCloudProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) validateCloudProvider(formats strfmt.Registry) error {
	if swag.IsZero(o.CloudProvider) { // not required
		return nil
	}

	// value enum
	if err := o.validateCloudProviderEnum("getPrivateEndpointServiceOK"+"."+"private_endpoint_service"+"."+"cloud_provider", "body", o.CloudProvider); err != nil {
		return err
	}

	return nil
}

var getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATING","ACTIVE","DELETING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeStatusPropEnum = append(getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeStatusPropEnum, v)
	}
}

const (

	// GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusCREATING captures enum value "CREATING"
	GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusCREATING string = "CREATING"

	// GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusACTIVE captures enum value "ACTIVE"
	GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusACTIVE string = "ACTIVE"

	// GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusDELETING captures enum value "DELETING"
	GetPrivateEndpointServiceOKBodyPrivateEndpointServiceStatusDELETING string = "DELETING"
)

// prop value enum
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getPrivateEndpointServiceOKBodyPrivateEndpointServiceTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("getPrivateEndpointServiceOK"+"."+"private_endpoint_service"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get private endpoint service o k body private endpoint service based on context it is used
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceOKBodyPrivateEndpointService) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceOKBodyPrivateEndpointService
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPrivateEndpointServiceTooManyRequestsBody get private endpoint service too many requests body
swagger:model GetPrivateEndpointServiceTooManyRequestsBody
*/
type GetPrivateEndpointServiceTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this get private endpoint service too many requests body
func (o *GetPrivateEndpointServiceTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get private endpoint service too many requests body based on context it is used
func (o *GetPrivateEndpointServiceTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPrivateEndpointServiceTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPrivateEndpointServiceTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetPrivateEndpointServiceTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
