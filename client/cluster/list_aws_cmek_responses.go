// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListAwsCmekReader is a Reader for the ListAwsCmek structure.
type ListAwsCmekReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAwsCmekReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAwsCmekOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAwsCmekBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAwsCmekUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAwsCmekForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAwsCmekNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListAwsCmekTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAwsCmekInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListAwsCmekDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAwsCmekOK creates a ListAwsCmekOK with default headers values
func NewListAwsCmekOK() *ListAwsCmekOK {
	return &ListAwsCmekOK{}
}

/*
ListAwsCmekOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListAwsCmekOK struct {
	Payload *ListAwsCmekOKBody
}

// IsSuccess returns true when this list aws cmek o k response has a 2xx status code
func (o *ListAwsCmekOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list aws cmek o k response has a 3xx status code
func (o *ListAwsCmekOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek o k response has a 4xx status code
func (o *ListAwsCmekOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list aws cmek o k response has a 5xx status code
func (o *ListAwsCmekOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek o k response a status code equal to that given
func (o *ListAwsCmekOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list aws cmek o k response
func (o *ListAwsCmekOK) Code() int {
	return 200
}

func (o *ListAwsCmekOK) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekOK  %+v", 200, o.Payload)
}

func (o *ListAwsCmekOK) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekOK  %+v", 200, o.Payload)
}

func (o *ListAwsCmekOK) GetPayload() *ListAwsCmekOKBody {
	return o.Payload
}

func (o *ListAwsCmekOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekBadRequest creates a ListAwsCmekBadRequest with default headers values
func NewListAwsCmekBadRequest() *ListAwsCmekBadRequest {
	return &ListAwsCmekBadRequest{}
}

/*
ListAwsCmekBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type ListAwsCmekBadRequest struct {
	Payload *ListAwsCmekBadRequestBody
}

// IsSuccess returns true when this list aws cmek bad request response has a 2xx status code
func (o *ListAwsCmekBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek bad request response has a 3xx status code
func (o *ListAwsCmekBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek bad request response has a 4xx status code
func (o *ListAwsCmekBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aws cmek bad request response has a 5xx status code
func (o *ListAwsCmekBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek bad request response a status code equal to that given
func (o *ListAwsCmekBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list aws cmek bad request response
func (o *ListAwsCmekBadRequest) Code() int {
	return 400
}

func (o *ListAwsCmekBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekBadRequest  %+v", 400, o.Payload)
}

func (o *ListAwsCmekBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekBadRequest  %+v", 400, o.Payload)
}

func (o *ListAwsCmekBadRequest) GetPayload() *ListAwsCmekBadRequestBody {
	return o.Payload
}

func (o *ListAwsCmekBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekUnauthorized creates a ListAwsCmekUnauthorized with default headers values
func NewListAwsCmekUnauthorized() *ListAwsCmekUnauthorized {
	return &ListAwsCmekUnauthorized{}
}

/*
ListAwsCmekUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type ListAwsCmekUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this list aws cmek unauthorized response has a 2xx status code
func (o *ListAwsCmekUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek unauthorized response has a 3xx status code
func (o *ListAwsCmekUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek unauthorized response has a 4xx status code
func (o *ListAwsCmekUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aws cmek unauthorized response has a 5xx status code
func (o *ListAwsCmekUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek unauthorized response a status code equal to that given
func (o *ListAwsCmekUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list aws cmek unauthorized response
func (o *ListAwsCmekUnauthorized) Code() int {
	return 401
}

func (o *ListAwsCmekUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAwsCmekUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAwsCmekUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAwsCmekUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekForbidden creates a ListAwsCmekForbidden with default headers values
func NewListAwsCmekForbidden() *ListAwsCmekForbidden {
	return &ListAwsCmekForbidden{}
}

/*
ListAwsCmekForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type ListAwsCmekForbidden struct {
	Payload *ListAwsCmekForbiddenBody
}

// IsSuccess returns true when this list aws cmek forbidden response has a 2xx status code
func (o *ListAwsCmekForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek forbidden response has a 3xx status code
func (o *ListAwsCmekForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek forbidden response has a 4xx status code
func (o *ListAwsCmekForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aws cmek forbidden response has a 5xx status code
func (o *ListAwsCmekForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek forbidden response a status code equal to that given
func (o *ListAwsCmekForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list aws cmek forbidden response
func (o *ListAwsCmekForbidden) Code() int {
	return 403
}

func (o *ListAwsCmekForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekForbidden  %+v", 403, o.Payload)
}

func (o *ListAwsCmekForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekForbidden  %+v", 403, o.Payload)
}

func (o *ListAwsCmekForbidden) GetPayload() *ListAwsCmekForbiddenBody {
	return o.Payload
}

func (o *ListAwsCmekForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekNotFound creates a ListAwsCmekNotFound with default headers values
func NewListAwsCmekNotFound() *ListAwsCmekNotFound {
	return &ListAwsCmekNotFound{}
}

/*
ListAwsCmekNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type ListAwsCmekNotFound struct {
	Payload *ListAwsCmekNotFoundBody
}

// IsSuccess returns true when this list aws cmek not found response has a 2xx status code
func (o *ListAwsCmekNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek not found response has a 3xx status code
func (o *ListAwsCmekNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek not found response has a 4xx status code
func (o *ListAwsCmekNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aws cmek not found response has a 5xx status code
func (o *ListAwsCmekNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek not found response a status code equal to that given
func (o *ListAwsCmekNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list aws cmek not found response
func (o *ListAwsCmekNotFound) Code() int {
	return 404
}

func (o *ListAwsCmekNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekNotFound  %+v", 404, o.Payload)
}

func (o *ListAwsCmekNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekNotFound  %+v", 404, o.Payload)
}

func (o *ListAwsCmekNotFound) GetPayload() *ListAwsCmekNotFoundBody {
	return o.Payload
}

func (o *ListAwsCmekNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekTooManyRequests creates a ListAwsCmekTooManyRequests with default headers values
func NewListAwsCmekTooManyRequests() *ListAwsCmekTooManyRequests {
	return &ListAwsCmekTooManyRequests{}
}

/*
ListAwsCmekTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type ListAwsCmekTooManyRequests struct {
	Payload *ListAwsCmekTooManyRequestsBody
}

// IsSuccess returns true when this list aws cmek too many requests response has a 2xx status code
func (o *ListAwsCmekTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek too many requests response has a 3xx status code
func (o *ListAwsCmekTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek too many requests response has a 4xx status code
func (o *ListAwsCmekTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aws cmek too many requests response has a 5xx status code
func (o *ListAwsCmekTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list aws cmek too many requests response a status code equal to that given
func (o *ListAwsCmekTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list aws cmek too many requests response
func (o *ListAwsCmekTooManyRequests) Code() int {
	return 429
}

func (o *ListAwsCmekTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListAwsCmekTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListAwsCmekTooManyRequests) GetPayload() *ListAwsCmekTooManyRequestsBody {
	return o.Payload
}

func (o *ListAwsCmekTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekInternalServerError creates a ListAwsCmekInternalServerError with default headers values
func NewListAwsCmekInternalServerError() *ListAwsCmekInternalServerError {
	return &ListAwsCmekInternalServerError{}
}

/*
ListAwsCmekInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type ListAwsCmekInternalServerError struct {
	Payload *ListAwsCmekInternalServerErrorBody
}

// IsSuccess returns true when this list aws cmek internal server error response has a 2xx status code
func (o *ListAwsCmekInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aws cmek internal server error response has a 3xx status code
func (o *ListAwsCmekInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aws cmek internal server error response has a 4xx status code
func (o *ListAwsCmekInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list aws cmek internal server error response has a 5xx status code
func (o *ListAwsCmekInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list aws cmek internal server error response a status code equal to that given
func (o *ListAwsCmekInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list aws cmek internal server error response
func (o *ListAwsCmekInternalServerError) Code() int {
	return 500
}

func (o *ListAwsCmekInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAwsCmekInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] listAwsCmekInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAwsCmekInternalServerError) GetPayload() *ListAwsCmekInternalServerErrorBody {
	return o.Payload
}

func (o *ListAwsCmekInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAwsCmekDefault creates a ListAwsCmekDefault with default headers values
func NewListAwsCmekDefault(code int) *ListAwsCmekDefault {
	return &ListAwsCmekDefault{
		_statusCode: code,
	}
}

/*
ListAwsCmekDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListAwsCmekDefault struct {
	_statusCode int

	Payload *ListAwsCmekDefaultBody
}

// IsSuccess returns true when this list aws cmek default response has a 2xx status code
func (o *ListAwsCmekDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list aws cmek default response has a 3xx status code
func (o *ListAwsCmekDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list aws cmek default response has a 4xx status code
func (o *ListAwsCmekDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list aws cmek default response has a 5xx status code
func (o *ListAwsCmekDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list aws cmek default response a status code equal to that given
func (o *ListAwsCmekDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list aws cmek default response
func (o *ListAwsCmekDefault) Code() int {
	return o._statusCode
}

func (o *ListAwsCmekDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] ListAwsCmek default  %+v", o._statusCode, o.Payload)
}

func (o *ListAwsCmekDefault) String() string {
	return fmt.Sprintf("[GET /api/v1beta/projects/{project_id}/aws-cmek][%d] ListAwsCmek default  %+v", o._statusCode, o.Payload)
}

func (o *ListAwsCmekDefault) GetPayload() *ListAwsCmekDefaultBody {
	return o.Payload
}

func (o *ListAwsCmekDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAwsCmekDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListAwsCmekBadRequestBody list aws cmek bad request body
swagger:model ListAwsCmekBadRequestBody
*/
type ListAwsCmekBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek bad request body
func (o *ListAwsCmekBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek bad request body based on context it is used
func (o *ListAwsCmekBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekDefaultBody list aws cmek default body
swagger:model ListAwsCmekDefaultBody
*/
type ListAwsCmekDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*ListAwsCmekDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek default body
func (o *ListAwsCmekDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAwsCmekDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list aws cmek default body based on the context it is used
func (o *ListAwsCmekDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAwsCmekDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAwsCmek default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekDefaultBodyDetailsItems0 list aws cmek default body details items0
swagger:model ListAwsCmekDefaultBodyDetailsItems0
*/
type ListAwsCmekDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this list aws cmek default body details items0
func (o *ListAwsCmekDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek default body details items0 based on context it is used
func (o *ListAwsCmekDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekForbiddenBody list aws cmek forbidden body
swagger:model ListAwsCmekForbiddenBody
*/
type ListAwsCmekForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek forbidden body
func (o *ListAwsCmekForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek forbidden body based on context it is used
func (o *ListAwsCmekForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekInternalServerErrorBody list aws cmek internal server error body
swagger:model ListAwsCmekInternalServerErrorBody
*/
type ListAwsCmekInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek internal server error body
func (o *ListAwsCmekInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek internal server error body based on context it is used
func (o *ListAwsCmekInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekNotFoundBody list aws cmek not found body
swagger:model ListAwsCmekNotFoundBody
*/
type ListAwsCmekNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek not found body
func (o *ListAwsCmekNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek not found body based on context it is used
func (o *ListAwsCmekNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekOKBody ListAwsCmekResp
//
// ListAwsCmekResp is the response for getting AWS Customer-Managed Encryption Keys for a project.
swagger:model ListAwsCmekOKBody
*/
type ListAwsCmekOKBody struct {

	// The specifications of the AWS CMEK.
	Items []*ListAwsCmekOKBodyItemsItems0 `json:"items"`
}

// Validate validates this list aws cmek o k body
func (o *ListAwsCmekOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAwsCmekOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAwsCmekOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAwsCmekOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list aws cmek o k body based on the context it is used
func (o *ListAwsCmekOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAwsCmekOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {

			if swag.IsZero(o.Items[i]) { // not required
				return nil
			}

			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAwsCmekOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAwsCmekOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekOKBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekOKBodyItemsItems0 AwsCmekSpec
//
// AwsCmekSpec is the specification of the AWS CMEK.
swagger:model ListAwsCmekOKBodyItemsItems0
*/
type ListAwsCmekOKBodyItemsItems0 struct {

	// The KMS ARN of the AWS CMEK.
	// Example: arn:aws:kms:example
	// Required: true
	KmsArn *string `json:"kms_arn"`

	// The region name of the AWS CMEK. The region value should match the cloud provider's region code.
	//
	// You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
	//
	// For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
	// Example: us-west-2
	// Required: true
	Region *string `json:"region"`
}

// Validate validates this list aws cmek o k body items items0
func (o *ListAwsCmekOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKmsArn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAwsCmekOKBodyItemsItems0) validateKmsArn(formats strfmt.Registry) error {

	if err := validate.Required("kms_arn", "body", o.KmsArn); err != nil {
		return err
	}

	return nil
}

func (o *ListAwsCmekOKBodyItemsItems0) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", o.Region); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list aws cmek o k body items items0 based on context it is used
func (o *ListAwsCmekOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAwsCmekTooManyRequestsBody list aws cmek too many requests body
swagger:model ListAwsCmekTooManyRequestsBody
*/
type ListAwsCmekTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this list aws cmek too many requests body
func (o *ListAwsCmekTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list aws cmek too many requests body based on context it is used
func (o *ListAwsCmekTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAwsCmekTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAwsCmekTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res ListAwsCmekTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
