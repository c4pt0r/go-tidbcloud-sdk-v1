// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteClusterReader is a Reader for the DeleteCluster structure.
type DeleteClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteClusterTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteClusterOK creates a DeleteClusterOK with default headers values
func NewDeleteClusterOK() *DeleteClusterOK {
	return &DeleteClusterOK{}
}

/*
DeleteClusterOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteClusterOK struct {
	Payload interface{}
}

// IsSuccess returns true when this delete cluster o k response has a 2xx status code
func (o *DeleteClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cluster o k response has a 3xx status code
func (o *DeleteClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster o k response has a 4xx status code
func (o *DeleteClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster o k response has a 5xx status code
func (o *DeleteClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster o k response a status code equal to that given
func (o *DeleteClusterOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteClusterOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterOK  %+v", 200, o.Payload)
}

func (o *DeleteClusterOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterOK  %+v", 200, o.Payload)
}

func (o *DeleteClusterOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterBadRequest creates a DeleteClusterBadRequest with default headers values
func NewDeleteClusterBadRequest() *DeleteClusterBadRequest {
	return &DeleteClusterBadRequest{}
}

/*
DeleteClusterBadRequest describes a response with status code 400, with default header values.

A request field is invalid.
*/
type DeleteClusterBadRequest struct {
	Payload *DeleteClusterBadRequestBody
}

// IsSuccess returns true when this delete cluster bad request response has a 2xx status code
func (o *DeleteClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster bad request response has a 3xx status code
func (o *DeleteClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster bad request response has a 4xx status code
func (o *DeleteClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster bad request response has a 5xx status code
func (o *DeleteClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster bad request response a status code equal to that given
func (o *DeleteClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteClusterBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClusterBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClusterBadRequest) GetPayload() *DeleteClusterBadRequestBody {
	return o.Payload
}

func (o *DeleteClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterUnauthorized creates a DeleteClusterUnauthorized with default headers values
func NewDeleteClusterUnauthorized() *DeleteClusterUnauthorized {
	return &DeleteClusterUnauthorized{}
}

/*
DeleteClusterUnauthorized describes a response with status code 401, with default header values.

The API key cannot be authenticated.
*/
type DeleteClusterUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this delete cluster unauthorized response has a 2xx status code
func (o *DeleteClusterUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster unauthorized response has a 3xx status code
func (o *DeleteClusterUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster unauthorized response has a 4xx status code
func (o *DeleteClusterUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster unauthorized response has a 5xx status code
func (o *DeleteClusterUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster unauthorized response a status code equal to that given
func (o *DeleteClusterUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteClusterUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteClusterUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteClusterUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterForbidden creates a DeleteClusterForbidden with default headers values
func NewDeleteClusterForbidden() *DeleteClusterForbidden {
	return &DeleteClusterForbidden{}
}

/*
DeleteClusterForbidden describes a response with status code 403, with default header values.

The API key does not have permission to access the resource.
*/
type DeleteClusterForbidden struct {
	Payload *DeleteClusterForbiddenBody
}

// IsSuccess returns true when this delete cluster forbidden response has a 2xx status code
func (o *DeleteClusterForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster forbidden response has a 3xx status code
func (o *DeleteClusterForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster forbidden response has a 4xx status code
func (o *DeleteClusterForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster forbidden response has a 5xx status code
func (o *DeleteClusterForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster forbidden response a status code equal to that given
func (o *DeleteClusterForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteClusterForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterForbidden  %+v", 403, o.Payload)
}

func (o *DeleteClusterForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterForbidden  %+v", 403, o.Payload)
}

func (o *DeleteClusterForbidden) GetPayload() *DeleteClusterForbiddenBody {
	return o.Payload
}

func (o *DeleteClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterNotFound creates a DeleteClusterNotFound with default headers values
func NewDeleteClusterNotFound() *DeleteClusterNotFound {
	return &DeleteClusterNotFound{}
}

/*
DeleteClusterNotFound describes a response with status code 404, with default header values.

The requested resource does not exist.
*/
type DeleteClusterNotFound struct {
	Payload *DeleteClusterNotFoundBody
}

// IsSuccess returns true when this delete cluster not found response has a 2xx status code
func (o *DeleteClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster not found response has a 3xx status code
func (o *DeleteClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster not found response has a 4xx status code
func (o *DeleteClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster not found response has a 5xx status code
func (o *DeleteClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster not found response a status code equal to that given
func (o *DeleteClusterNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteClusterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClusterNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClusterNotFound) GetPayload() *DeleteClusterNotFoundBody {
	return o.Payload
}

func (o *DeleteClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterTooManyRequests creates a DeleteClusterTooManyRequests with default headers values
func NewDeleteClusterTooManyRequests() *DeleteClusterTooManyRequests {
	return &DeleteClusterTooManyRequests{}
}

/*
DeleteClusterTooManyRequests describes a response with status code 429, with default header values.

You have exceed the rate limit.
*/
type DeleteClusterTooManyRequests struct {
	Payload *DeleteClusterTooManyRequestsBody
}

// IsSuccess returns true when this delete cluster too many requests response has a 2xx status code
func (o *DeleteClusterTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster too many requests response has a 3xx status code
func (o *DeleteClusterTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster too many requests response has a 4xx status code
func (o *DeleteClusterTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster too many requests response has a 5xx status code
func (o *DeleteClusterTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster too many requests response a status code equal to that given
func (o *DeleteClusterTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteClusterTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteClusterTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteClusterTooManyRequests) GetPayload() *DeleteClusterTooManyRequestsBody {
	return o.Payload
}

func (o *DeleteClusterTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterInternalServerError creates a DeleteClusterInternalServerError with default headers values
func NewDeleteClusterInternalServerError() *DeleteClusterInternalServerError {
	return &DeleteClusterInternalServerError{}
}

/*
DeleteClusterInternalServerError describes a response with status code 500, with default header values.

Server error.
*/
type DeleteClusterInternalServerError struct {
	Payload *DeleteClusterInternalServerErrorBody
}

// IsSuccess returns true when this delete cluster internal server error response has a 2xx status code
func (o *DeleteClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster internal server error response has a 3xx status code
func (o *DeleteClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster internal server error response has a 4xx status code
func (o *DeleteClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster internal server error response has a 5xx status code
func (o *DeleteClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete cluster internal server error response a status code equal to that given
func (o *DeleteClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteClusterInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClusterInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] deleteClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClusterInternalServerError) GetPayload() *DeleteClusterInternalServerErrorBody {
	return o.Payload
}

func (o *DeleteClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterDefault creates a DeleteClusterDefault with default headers values
func NewDeleteClusterDefault(code int) *DeleteClusterDefault {
	return &DeleteClusterDefault{
		_statusCode: code,
	}
}

/*
DeleteClusterDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DeleteClusterDefault struct {
	_statusCode int

	Payload *DeleteClusterDefaultBody
}

// Code gets the status code for the delete cluster default response
func (o *DeleteClusterDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete cluster default response has a 2xx status code
func (o *DeleteClusterDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete cluster default response has a 3xx status code
func (o *DeleteClusterDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete cluster default response has a 4xx status code
func (o *DeleteClusterDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete cluster default response has a 5xx status code
func (o *DeleteClusterDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete cluster default response a status code equal to that given
func (o *DeleteClusterDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteClusterDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] DeleteCluster default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClusterDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1beta/projects/{project_id}/clusters/{cluster_id}][%d] DeleteCluster default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClusterDefault) GetPayload() *DeleteClusterDefaultBody {
	return o.Payload
}

func (o *DeleteClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteClusterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeleteClusterBadRequestBody delete cluster bad request body
swagger:model DeleteClusterBadRequestBody
*/
type DeleteClusterBadRequestBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster bad request body
func (o *DeleteClusterBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster bad request body based on context it is used
func (o *DeleteClusterBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterDefaultBody delete cluster default body
swagger:model DeleteClusterDefaultBody
*/
type DeleteClusterDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*DeleteClusterDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster default body
func (o *DeleteClusterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteClusterDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("DeleteCluster default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("DeleteCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this delete cluster default body based on the context it is used
func (o *DeleteClusterDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteClusterDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("DeleteCluster default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("DeleteCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterDefaultBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterDefaultBodyDetailsItems0 delete cluster default body details items0
swagger:model DeleteClusterDefaultBodyDetailsItems0
*/
type DeleteClusterDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this delete cluster default body details items0
func (o *DeleteClusterDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster default body details items0 based on context it is used
func (o *DeleteClusterDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteClusterDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterForbiddenBody delete cluster forbidden body
swagger:model DeleteClusterForbiddenBody
*/
type DeleteClusterForbiddenBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster forbidden body
func (o *DeleteClusterForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster forbidden body based on context it is used
func (o *DeleteClusterForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterInternalServerErrorBody delete cluster internal server error body
swagger:model DeleteClusterInternalServerErrorBody
*/
type DeleteClusterInternalServerErrorBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster internal server error body
func (o *DeleteClusterInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster internal server error body based on context it is used
func (o *DeleteClusterInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterNotFoundBody delete cluster not found body
swagger:model DeleteClusterNotFoundBody
*/
type DeleteClusterNotFoundBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster not found body
func (o *DeleteClusterNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster not found body based on context it is used
func (o *DeleteClusterNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteClusterTooManyRequestsBody delete cluster too many requests body
swagger:model DeleteClusterTooManyRequestsBody
*/
type DeleteClusterTooManyRequestsBody struct {

	// code
	//
	// Error code returned with this error.
	Code int64 `json:"code,omitempty"`

	// details
	//
	// Error details returned with this error.
	Details []string `json:"details"`

	// message
	//
	// Error message returned with this error.
	Message string `json:"message,omitempty"`
}

// Validate validates this delete cluster too many requests body
func (o *DeleteClusterTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete cluster too many requests body based on context it is used
func (o *DeleteClusterTooManyRequestsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClusterTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClusterTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res DeleteClusterTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
